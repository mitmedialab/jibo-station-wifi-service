{"version":3,"sources":["../node_modules/mobile-detect/mobile-detect.js","client.js"],"names":["window","client","MobileDetect","require","status_request","Request","status_request_first","scan_request","PING_INTERVAL","STATUS_INTERVAL","SCAN_INTERVAL","current_ssid","current_rssi","connection_error","connection_timeout","attempt_browser_close","setTimeoutAnimationFrame","callback","interval","setTimeout","requestAnimationFrame","monitorServer","fetch","document","body","classList","remove","err","console","error","add","monitorStatus","response","first","data","json","retry","Object","keys","length","showStatus","last_status","status","state","wifi_ssid","wpa_state","wifi_connected","ssid","replace","log","contains","clearTimeout","undefined","connect_attempts","jibo_connected","internet_connected","server_connected","showConnection","wifi_error","connectiondiv","querySelector","template","div","content","firstElementChild","cloneNode","connecting","disconnecting","textContent","rssiToBars","replaceChildren","loadContactMessages","project","wellness","contactusdiv","template2","contactus2div","contactus0div","center","center2","center0","monitorScan","showScan","network_list","seen","entries","createDocumentFragment","n","network","includes","startsWith","push","li","open","security","signal","addEventListener","click_network","appendChild","ssid_changed","rssi","quanta","toggle_body_class","classname","reset_scroll","selector","section","scrollIntoView","connect_wifi","event","target","preventDefault","formdata","FormData","get","password","trim_space","checked","trim","feedback","method","JSON","stringify","headers","matched","cancel_connecting","disconnect_wifi","request","toggle_password_visibility","type","visibility","ssid_input","ssid_value","value","li_entries","querySelectorAll","li_entry","password_focused","password_input","focus","show_nomatch_panel","show_info_panel","local_hostname","hostname","local_ip_address","ip_address","rover_ip_address","dhcp_leases","dhcp_leases_table","lease","lease_time","mac_address","dhcp_name","dunnowhatthisis","tr","jibo_ip_address","info","dismiss_all_panels","hashParams","parseHash","hash","location","substr","split","reduce","result","item","parts","finished","close","init","md","navigator","userAgent","debugstr","f","v","version","screen","width","height","tablet","android_version","Number","dismiss_buttons","dismiss_button"],"mappings":";;AAk/BA,IAAA,GA7+BA,SAAA,EAAA,GACA,EAAA,WACA,aAEA,IA4SA,EA5SA,EAAA,CAEA,kBAAA,CACA,OAAA,CACA,OAAA,0BACA,WAAA,2FACA,MAAA,gBACA,IAAA,6RACA,MAAA,0FACA,KAAA,6GACA,SAAA,grBACA,QAAA,m1KACA,GAAA,4hBACA,KAAA,+IACA,KAAA,+BACA,OAAA,sKACA,WAAA,mBACA,SAAA,gHACA,KAAA,kBACA,MAAA,4GACA,QAAA,yaACA,IAAA,oHACA,KAAA,6OACA,QAAA,sCACA,UAAA,sHACA,SAAA,kEACA,QAAA,UACA,SAAA,wBACA,KAAA,OACA,IAAA,MACA,QAAA,UACA,aAAA,0LAEA,QAAA,CACA,KAAA,oBACA,YAAA,+BACA,aAAA,mBACA,cAAA,88DACA,OAAA,wNACA,cAAA,4CACA,SAAA,6FACA,WAAA,ubACA,iBAAA,sBACA,UAAA,mFACA,eAAA,mGACA,WAAA,uGACA,WAAA,0OACA,cAAA,0GACA,SAAA,+EACA,cAAA,qDACA,gBAAA,gaACA,aAAA,ipBACA,WAAA,wDACA,aAAA,ifACA,aAAA,6DACA,aAAA,4GACA,cAAA,mDACA,UAAA,UACA,cAAA,8CACA,YAAA,kDACA,cAAA,2EACA,aAAA,kLACA,YAAA,qEACA,iBAAA,aACA,WAAA,gUACA,cAAA,uFACA,WAAA,iFACA,WAAA,0KACA,UAAA,0QACA,UAAA,8IACA,WAAA,yEACA,eAAA,yDACA,UAAA,mBACA,SAAA,6KACA,aAAA,gJACA,UAAA,oBACA,cAAA,iBACA,cAAA,iCACA,aAAA,mCACA,WAAA,wCACA,eAAA,kCACA,WAAA,mBACA,WAAA,wDACA,YAAA,0EACA,YAAA,0mBACA,kBAAA,+BACA,eAAA,2GACA,gBAAA,6GACA,YAAA,iIACA,eAAA,qIACA,cAAA,qCACA,eAAA,yEACA,cAAA,kEACA,cAAA,mFACA,cAAA,4XACA,YAAA,yGACA,eAAA,2UACA,SAAA,+BACA,kBAAA,2UACA,cAAA,6IACA,UAAA,4HACA,UAAA,yBACA,cAAA,8DACA,aAAA,gHACA,eAAA,oCACA,eAAA,sCACA,eAAA,wcACA,cAAA,kRACA,aAAA,gRACA,UAAA,+BACA,aAAA,kDACA,eAAA,kEACA,iBAAA,2CACA,eAAA,2EACA,cAAA,kBACA,aAAA,kCACA,iBAAA,gCACA,WAAA,iBACA,UAAA,qCACA,YAAA,sBACA,UAAA,wOACA,WAAA,wfACA,UAAA,qBACA,WAAA,0VACA,gBAAA,2GACA,cAAA,gDACA,WAAA,uHACA,cAAA,cACA,cAAA,iKACA,cAAA,04BACA,WAAA,qUACA,cAAA,YACA,gBAAA,iCACA,YAAA,oGACA,aAAA,sFACA,WAAA,iDACA,UAAA,kEACA,YAAA,6QACA,aAAA,uFACA,aAAA,0RACA,eAAA,mFACA,SAAA,gCACA,aAAA,+BACA,WAAA,iGACA,aAAA,+IACA,eAAA,mBACA,iBAAA,aACA,aAAA,kBACA,cAAA,sBACA,KAAA,oBACA,cAAA,SACA,cAAA,+RAEA,IAAA,CACA,UAAA,UACA,aAAA,sCACA,OAAA,yDACA,UAAA,wDACA,gBAAA,kGACA,eAAA,iHACA,IAAA,mDACA,OAAA,YACA,WAAA,WACA,QAAA,QACA,QAAA,QACA,OAAA,8BACA,MAAA,cACA,OAAA,aACA,OAAA,QAEA,IAAA,CACA,OAAA,qDACA,OAAA,eACA,MAAA,4EACA,QAAA,UACA,KAAA,0CACA,GAAA,sBACA,QAAA,uEACA,KAAA,OACA,SAAA,WACA,OAAA,SACA,OAAA,wEACA,OAAA,uBACA,UAAA,oBACA,YAAA,cACA,aAAA,eACA,aAAA,eACA,QAAA,gBACA,aAAA,QACA,SAAA,aACA,eAAA,sIACA,SAAA,sCAEA,MAAA,CACA,OAAA,eACA,MAAA,cACA,QAAA,gBACA,SAAA,iBACA,KAAA,wBACA,OAAA,0BACA,KAAA,wBACA,OAAA,eACA,OAAA,CACA,eACA,cACA,cAEA,MAAA,CACA,eAEA,OAAA,eACA,QAAA,CACA,gBACA,eAEA,OAAA,eACA,KAAA,aACA,GAAA,CACA,kBACA,iBACA,cACA,8BAEA,SAAA,iBACA,aAAA,qBACA,MAAA,CACA,aACA,mBACA,iBAEA,aAAA,mBACA,aAAA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","file":"client.d3658f45.js","sourceRoot":"../client","sourcesContent":["// THIS FILE IS GENERATED - DO NOT EDIT!\n/*!mobile-detect v1.4.5 2021-03-13*/\n/*global module:false, define:false*/\n/*jshint latedef:false*/\n/*!@license Copyright 2013, Heinrich Goebl, License: MIT, see https://github.com/hgoebl/mobile-detect.js*/\n(function (define, undefined) {\ndefine(function () {\n    'use strict';\n\n    var impl = {};\n\n    impl.mobileDetectRules = {\n    \"phones\": {\n        \"iPhone\": \"\\\\biPhone\\\\b|\\\\biPod\\\\b\",\n        \"BlackBerry\": \"BlackBerry|\\\\bBB10\\\\b|rim[0-9]+|\\\\b(BBA100|BBB100|BBD100|BBE100|BBF100|STH100)\\\\b-[0-9]+\",\n        \"Pixel\": \"; \\\\bPixel\\\\b\",\n        \"HTC\": \"HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\\\bEVO\\\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel\",\n        \"Nexus\": \"Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 5X|Nexus 6\",\n        \"Dell\": \"Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\\\b001DL\\\\b|\\\\b101DL\\\\b|\\\\bGS01\\\\b\",\n        \"Motorola\": \"Motorola|DROIDX|DROID BIONIC|\\\\bDroid\\\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\\\bMoto E\\\\b|XT1068|XT1092|XT1052\",\n        \"Samsung\": \"\\\\bSamsung\\\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F|SM-G610F|SM-G981B|SM-G892A|SM-A530F\",\n        \"LG\": \"\\\\bLG\\\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710\",\n        \"Sony\": \"SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533|SOV34|601SO|F8332\",\n        \"Asus\": \"Asus.*Galaxy|PadFone.*Mobile\",\n        \"Xiaomi\": \"^(?!.*\\\\bx11\\\\b).*xiaomi.*$|POCOPHONE F1|MI 8|Redmi Note 9S|Redmi Note 5A Prime|N2G47H|M2001J2G|M2001J2I|M1805E10A|M2004J11G|M1902F1G|M2002J9G|M2004J19G|M2003J6A1G\",\n        \"NokiaLumia\": \"Lumia [0-9]{3,4}\",\n        \"Micromax\": \"Micromax.*\\\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\\\b\",\n        \"Palm\": \"PalmSource|Palm\",\n        \"Vertu\": \"Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature\",\n        \"Pantech\": \"PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790\",\n        \"Fly\": \"IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250\",\n        \"Wiko\": \"KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM\",\n        \"iMobile\": \"i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)\",\n        \"SimValley\": \"\\\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\\\b\",\n        \"Wolfgang\": \"AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q\",\n        \"Alcatel\": \"Alcatel\",\n        \"Nintendo\": \"Nintendo (3DS|Switch)\",\n        \"Amoi\": \"Amoi\",\n        \"INQ\": \"INQ\",\n        \"OnePlus\": \"ONEPLUS\",\n        \"GenericPhone\": \"Tapatalk|PDA;|SAGEM|\\\\bmmp\\\\b|pocket|\\\\bpsp\\\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\\\bwap\\\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser\"\n    },\n    \"tablets\": {\n        \"iPad\": \"iPad|iPad.*Mobile\",\n        \"NexusTablet\": \"Android.*Nexus[\\\\s]+(7|9|10)\",\n        \"GoogleTablet\": \"Android.*Pixel C\",\n        \"SamsungTablet\": \"SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V|SM-P610|SM-T290|SM-T515|SM-T590|SM-T595|SM-T725|SM-T817P|SM-P585N0|SM-T395|SM-T295|SM-T865|SM-P610N|SM-P615|SM-T970|SM-T380|SM-T5950|SM-T905|SM-T231|SM-T500|SM-T860\",\n        \"Kindle\": \"Kindle|Silk.*Accelerated|Android.*\\\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\\\b|Android.*Silk\\/[0-9.]+ like Chrome\\/[0-9.]+ (?!Mobile)\",\n        \"SurfaceTablet\": \"Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)\",\n        \"HPTablet\": \"HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10\",\n        \"AsusTablet\": \"^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\\\bK00F\\\\b|\\\\bK00C\\\\b|\\\\bK00E\\\\b|\\\\bK00L\\\\b|TX201LA|ME176C|ME102A|\\\\bM80TA\\\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\\\bME70C\\\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\\\bP027\\\\b|\\\\bP024\\\\b|\\\\bP00C\\\\b\",\n        \"BlackBerryTablet\": \"PlayBook|RIM Tablet\",\n        \"HTCtablet\": \"HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410\",\n        \"MotorolaTablet\": \"xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617\",\n        \"NookTablet\": \"Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2\",\n        \"AcerTablet\": \"Android.*; \\\\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\\\b|W3-810|\\\\bA3-A10\\\\b|\\\\bA3-A11\\\\b|\\\\bA3-A20\\\\b|\\\\bA3-A30|A3-A40\",\n        \"ToshibaTablet\": \"Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO\",\n        \"LGTablet\": \"\\\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\\\b\",\n        \"FujitsuTablet\": \"Android.*\\\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\\\b\",\n        \"PrestigioTablet\": \"PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002\",\n        \"LenovoTablet\": \"Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X|TB-X704F|TB-X104F|TB3-X70F|TB-X705F|TB-8504F|TB3-X70L|TB3-710F|TB-X704L\",\n        \"DellTablet\": \"Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7\",\n        \"YarvikTablet\": \"Android.*\\\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\\\b\",\n        \"MedionTablet\": \"Android.*\\\\bOYO\\\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB\",\n        \"ArnovaTablet\": \"97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2\",\n        \"IntensoTablet\": \"INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004\",\n        \"IRUTablet\": \"M702pro\",\n        \"MegafonTablet\": \"MegaFon V9|\\\\bZTE V9\\\\b|Android.*\\\\bMT7A\\\\b\",\n        \"EbodaTablet\": \"E-Boda (Supreme|Impresspeed|Izzycomm|Essential)\",\n        \"AllViewTablet\": \"Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)\",\n        \"ArchosTablet\": \"\\\\b(101G9|80G9|A101IT)\\\\b|Qilive 97R|Archos5|\\\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\\\b\",\n        \"AinolTablet\": \"NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark\",\n        \"NokiaLumiaTablet\": \"Lumia 2520\",\n        \"SonyTablet\": \"Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712\",\n        \"PhilipsTablet\": \"\\\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\\\b\",\n        \"CubeTablet\": \"Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT\",\n        \"CobyTablet\": \"MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010\",\n        \"MIDTablet\": \"M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10\",\n        \"MSITablet\": \"MSI \\\\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\\\b\",\n        \"SMiTTablet\": \"Android.*(\\\\bMID\\\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)\",\n        \"RockChipTablet\": \"Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A\",\n        \"FlyTablet\": \"IQ310|Fly Vision\",\n        \"bqTablet\": \"Android.*(bq)?.*\\\\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\\\\b|Maxwell.*Lite|Maxwell.*Plus\",\n        \"HuaweiTablet\": \"MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19\",\n        \"NecTablet\": \"\\\\bN-06D|\\\\bN-08D\",\n        \"PantechTablet\": \"Pantech.*P4100\",\n        \"BronchoTablet\": \"Broncho.*(N701|N708|N802|a710)\",\n        \"VersusTablet\": \"TOUCHPAD.*[78910]|\\\\bTOUCHTAB\\\\b\",\n        \"ZyncTablet\": \"z1000|Z99 2G|z930|z990|z909|Z919|z900\",\n        \"PositivoTablet\": \"TB07STA|TB10STA|TB07FTA|TB10FTA\",\n        \"NabiTablet\": \"Android.*\\\\bNabi\",\n        \"KoboTablet\": \"Kobo Touch|\\\\bK080\\\\b|\\\\bVox\\\\b Build|\\\\bArc\\\\b Build\",\n        \"DanewTablet\": \"DSlide.*\\\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\\\b\",\n        \"TexetTablet\": \"NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE\",\n        \"PlaystationTablet\": \"Playstation.*(Portable|Vita)\",\n        \"TrekstorTablet\": \"ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab\",\n        \"PyleAudioTablet\": \"\\\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\\\b\",\n        \"AdvanTablet\": \"Android.* \\\\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\\\b \",\n        \"DanyTechTablet\": \"Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1\",\n        \"GalapadTablet\": \"Android [0-9.]+; [a-z-]+; \\\\bG1\\\\b\",\n        \"MicromaxTablet\": \"Funbook|Micromax.*\\\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\\\b\",\n        \"KarbonnTablet\": \"Android.*\\\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\\\b\",\n        \"AllFineTablet\": \"Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide\",\n        \"PROSCANTablet\": \"\\\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\\\b\",\n        \"YONESTablet\": \"BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026\",\n        \"ChangJiaTablet\": \"TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503\",\n        \"GUTablet\": \"TX-A1301|TX-M9002|Q702|kf026\",\n        \"PointOfViewTablet\": \"TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10\",\n        \"OvermaxTablet\": \"OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027\",\n        \"HCLTablet\": \"HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync\",\n        \"DPSTablet\": \"DPS Dream 9|DPS Dual 7\",\n        \"VistureTablet\": \"V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10\",\n        \"CrestaTablet\": \"CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989\",\n        \"MediatekTablet\": \"\\\\bMT8125|MT8389|MT8135|MT8377\\\\b\",\n        \"ConcordeTablet\": \"Concorde([ ]+)?Tab|ConCorde ReadMan\",\n        \"GoCleverTablet\": \"GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042\",\n        \"ModecomTablet\": \"FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003\",\n        \"VoninoTablet\": \"\\\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\\\bQ8\\\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\\\b\",\n        \"ECSTablet\": \"V07OT2|TM105A|S10OT1|TR10CS1\",\n        \"StorexTablet\": \"eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab\",\n        \"VodafoneTablet\": \"SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497|VFD 1400\",\n        \"EssentielBTablet\": \"Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2\",\n        \"RossMoorTablet\": \"RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711\",\n        \"iMobileTablet\": \"i-mobile i-note\",\n        \"TolinoTablet\": \"tolino tab [0-9.]+|tolino shine\",\n        \"AudioSonicTablet\": \"\\\\bC-22Q|T7-QC|T-17B|T-17P\\\\b\",\n        \"AMPETablet\": \"Android.* A78 \",\n        \"SkkTablet\": \"Android.* (SKYPAD|PHOENIX|CYCLOPS)\",\n        \"TecnoTablet\": \"TECNO P9|TECNO DP8D\",\n        \"JXDTablet\": \"Android.* \\\\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\\\b\",\n        \"iJoyTablet\": \"Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)\",\n        \"FX2Tablet\": \"FX2 PAD7|FX2 PAD10\",\n        \"XoroTablet\": \"KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151\",\n        \"ViewsonicTablet\": \"ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a\",\n        \"VerizonTablet\": \"QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1\",\n        \"OdysTablet\": \"LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\\\bXELIO\\\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10\",\n        \"CaptivaTablet\": \"CAPTIVA PAD\",\n        \"IconbitTablet\": \"NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S\",\n        \"TeclastTablet\": \"T98 4G|\\\\bP80\\\\b|\\\\bX90HD\\\\b|X98 Air|X98 Air 3G|\\\\bX89\\\\b|P80 3G|\\\\bX80h\\\\b|P98 Air|\\\\bX89HD\\\\b|P98 3G|\\\\bP90HD\\\\b|P89 3G|X98 3G|\\\\bP70h\\\\b|P79HD 3G|G18d 3G|\\\\bP79HD\\\\b|\\\\bP89s\\\\b|\\\\bA88\\\\b|\\\\bP10HD\\\\b|\\\\bP19HD\\\\b|G18 3G|\\\\bP78HD\\\\b|\\\\bA78\\\\b|\\\\bP75\\\\b|G17s 3G|G17h 3G|\\\\bP85t\\\\b|\\\\bP90\\\\b|\\\\bP11\\\\b|\\\\bP98t\\\\b|\\\\bP98HD\\\\b|\\\\bG18d\\\\b|\\\\bP85s\\\\b|\\\\bP11HD\\\\b|\\\\bP88s\\\\b|\\\\bA80HD\\\\b|\\\\bA80se\\\\b|\\\\bA10h\\\\b|\\\\bP89\\\\b|\\\\bP78s\\\\b|\\\\bG18\\\\b|\\\\bP85\\\\b|\\\\bA70h\\\\b|\\\\bA70\\\\b|\\\\bG17\\\\b|\\\\bP18\\\\b|\\\\bA80s\\\\b|\\\\bA11s\\\\b|\\\\bP88HD\\\\b|\\\\bA80h\\\\b|\\\\bP76s\\\\b|\\\\bP76h\\\\b|\\\\bP98\\\\b|\\\\bA10HD\\\\b|\\\\bP78\\\\b|\\\\bP88\\\\b|\\\\bA11\\\\b|\\\\bA10t\\\\b|\\\\bP76a\\\\b|\\\\bP76t\\\\b|\\\\bP76e\\\\b|\\\\bP85HD\\\\b|\\\\bP85a\\\\b|\\\\bP86\\\\b|\\\\bP75HD\\\\b|\\\\bP76v\\\\b|\\\\bA12\\\\b|\\\\bP75a\\\\b|\\\\bA15\\\\b|\\\\bP76Ti\\\\b|\\\\bP81HD\\\\b|\\\\bA10\\\\b|\\\\bT760VE\\\\b|\\\\bT720HD\\\\b|\\\\bP76\\\\b|\\\\bP73\\\\b|\\\\bP71\\\\b|\\\\bP72\\\\b|\\\\bT720SE\\\\b|\\\\bC520Ti\\\\b|\\\\bT760\\\\b|\\\\bT720VE\\\\b|T720-3GE|T720-WiFi\",\n        \"OndaTablet\": \"\\\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\\\b[\\\\s]+|V10 \\\\b4G\\\\b\",\n        \"JaytechTablet\": \"TPC-PA762\",\n        \"BlaupunktTablet\": \"Endeavour 800NG|Endeavour 1010\",\n        \"DigmaTablet\": \"\\\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\\\b\",\n        \"EvolioTablet\": \"ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\\\bEvotab\\\\b|\\\\bNeura\\\\b\",\n        \"LavaTablet\": \"QPAD E704|\\\\bIvoryS\\\\b|E-TAB IVORY|\\\\bE-TAB\\\\b\",\n        \"AocTablet\": \"MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712\",\n        \"MpmanTablet\": \"MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\\\bMPG7\\\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010\",\n        \"CelkonTablet\": \"CT695|CT888|CT[\\\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\\\bCT-1\\\\b\",\n        \"WolderTablet\": \"miTab \\\\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\\\b\",\n        \"MediacomTablet\": \"M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA\",\n        \"MiTablet\": \"\\\\bMI PAD\\\\b|\\\\bHM NOTE 1W\\\\b\",\n        \"NibiruTablet\": \"Nibiru M1|Nibiru Jupiter One\",\n        \"NexoTablet\": \"NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI\",\n        \"LeaderTablet\": \"TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100\",\n        \"UbislateTablet\": \"UbiSlate[\\\\s]?7C\",\n        \"PocketBookTablet\": \"Pocketbook\",\n        \"KocasoTablet\": \"\\\\b(TB-1207)\\\\b\",\n        \"HisenseTablet\": \"\\\\b(F5281|E2371)\\\\b\",\n        \"Hudl\": \"Hudl HT7S3|Hudl 2\",\n        \"TelstraTablet\": \"T-Hub2\",\n        \"GenericTablet\": \"Android.*\\\\b97D\\\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\\\bA7EB\\\\b|CatNova8|A1_07|CT704|CT1002|\\\\bM721\\\\b|rk30sdk|\\\\bEVOTAB\\\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\\\bM6pro\\\\b|CT1020W|arc 10HD|\\\\bTP750\\\\b|\\\\bQTAQZ3\\\\b|WVT101|TM1088|KT107\"\n    },\n    \"oss\": {\n        \"AndroidOS\": \"Android\",\n        \"BlackBerryOS\": \"blackberry|\\\\bBB10\\\\b|rim tablet os\",\n        \"PalmOS\": \"PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino\",\n        \"SymbianOS\": \"Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\\\bS60\\\\b\",\n        \"WindowsMobileOS\": \"Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Windows Mobile|Windows Phone [0-9.]+|WCE;\",\n        \"WindowsPhoneOS\": \"Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;\",\n        \"iOS\": \"\\\\biPhone.*Mobile|\\\\biPod|\\\\biPad|AppleCoreMedia\",\n        \"iPadOS\": \"CPU OS 13\",\n        \"SailfishOS\": \"Sailfish\",\n        \"MeeGoOS\": \"MeeGo\",\n        \"MaemoOS\": \"Maemo\",\n        \"JavaOS\": \"J2ME\\/|\\\\bMIDP\\\\b|\\\\bCLDC\\\\b\",\n        \"webOS\": \"webOS|hpwOS\",\n        \"badaOS\": \"\\\\bBada\\\\b\",\n        \"BREWOS\": \"BREW\"\n    },\n    \"uas\": {\n        \"Chrome\": \"\\\\bCrMo\\\\b|CriOS|Android.*Chrome\\/[.0-9]* (Mobile)?\",\n        \"Dolfin\": \"\\\\bDolfin\\\\b\",\n        \"Opera\": \"Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR\\/[0-9.]+$|Coast\\/[0-9.]+\",\n        \"Skyfire\": \"Skyfire\",\n        \"Edge\": \"\\\\bEdgiOS\\\\b|Mobile Safari\\/[.0-9]* Edge\",\n        \"IE\": \"IEMobile|MSIEMobile\",\n        \"Firefox\": \"fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS\",\n        \"Bolt\": \"bolt\",\n        \"TeaShark\": \"teashark\",\n        \"Blazer\": \"Blazer\",\n        \"Safari\": \"Version((?!\\\\bEdgiOS\\\\b).)*Mobile.*Safari|Safari.*Mobile|MobileSafari\",\n        \"WeChat\": \"\\\\bMicroMessenger\\\\b\",\n        \"UCBrowser\": \"UC.*Browser|UCWEB\",\n        \"baiduboxapp\": \"baiduboxapp\",\n        \"baidubrowser\": \"baidubrowser\",\n        \"DiigoBrowser\": \"DiigoBrowser\",\n        \"Mercury\": \"\\\\bMercury\\\\b\",\n        \"ObigoBrowser\": \"Obigo\",\n        \"NetFront\": \"NF-Browser\",\n        \"GenericBrowser\": \"NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger\",\n        \"PaleMoon\": \"Android.*PaleMoon|Mobile.*PaleMoon\"\n    },\n    \"props\": {\n        \"Mobile\": \"Mobile\\/[VER]\",\n        \"Build\": \"Build\\/[VER]\",\n        \"Version\": \"Version\\/[VER]\",\n        \"VendorID\": \"VendorID\\/[VER]\",\n        \"iPad\": \"iPad.*CPU[a-z ]+[VER]\",\n        \"iPhone\": \"iPhone.*CPU[a-z ]+[VER]\",\n        \"iPod\": \"iPod.*CPU[a-z ]+[VER]\",\n        \"Kindle\": \"Kindle\\/[VER]\",\n        \"Chrome\": [\n            \"Chrome\\/[VER]\",\n            \"CriOS\\/[VER]\",\n            \"CrMo\\/[VER]\"\n        ],\n        \"Coast\": [\n            \"Coast\\/[VER]\"\n        ],\n        \"Dolfin\": \"Dolfin\\/[VER]\",\n        \"Firefox\": [\n            \"Firefox\\/[VER]\",\n            \"FxiOS\\/[VER]\"\n        ],\n        \"Fennec\": \"Fennec\\/[VER]\",\n        \"Edge\": \"Edge\\/[VER]\",\n        \"IE\": [\n            \"IEMobile\\/[VER];\",\n            \"IEMobile [VER]\",\n            \"MSIE [VER];\",\n            \"Trident\\/[0-9.]+;.*rv:[VER]\"\n        ],\n        \"NetFront\": \"NetFront\\/[VER]\",\n        \"NokiaBrowser\": \"NokiaBrowser\\/[VER]\",\n        \"Opera\": [\n            \" OPR\\/[VER]\",\n            \"Opera Mini\\/[VER]\",\n            \"Version\\/[VER]\"\n        ],\n        \"Opera Mini\": \"Opera Mini\\/[VER]\",\n        \"Opera Mobi\": \"Version\\/[VER]\",\n        \"UCBrowser\": [\n            \"UCWEB[VER]\",\n            \"UC.*Browser\\/[VER]\"\n        ],\n        \"MQQBrowser\": \"MQQBrowser\\/[VER]\",\n        \"MicroMessenger\": \"MicroMessenger\\/[VER]\",\n        \"baiduboxapp\": \"baiduboxapp\\/[VER]\",\n        \"baidubrowser\": \"baidubrowser\\/[VER]\",\n        \"SamsungBrowser\": \"SamsungBrowser\\/[VER]\",\n        \"Iron\": \"Iron\\/[VER]\",\n        \"Safari\": [\n            \"Version\\/[VER]\",\n            \"Safari\\/[VER]\"\n        ],\n        \"Skyfire\": \"Skyfire\\/[VER]\",\n        \"Tizen\": \"Tizen\\/[VER]\",\n        \"Webkit\": \"webkit[ \\/][VER]\",\n        \"PaleMoon\": \"PaleMoon\\/[VER]\",\n        \"SailfishBrowser\": \"SailfishBrowser\\/[VER]\",\n        \"Gecko\": \"Gecko\\/[VER]\",\n        \"Trident\": \"Trident\\/[VER]\",\n        \"Presto\": \"Presto\\/[VER]\",\n        \"Goanna\": \"Goanna\\/[VER]\",\n        \"iOS\": \" \\\\bi?OS\\\\b [VER][ ;]{1}\",\n        \"Android\": \"Android [VER]\",\n        \"Sailfish\": \"Sailfish [VER]\",\n        \"BlackBerry\": [\n            \"BlackBerry[\\\\w]+\\/[VER]\",\n            \"BlackBerry.*Version\\/[VER]\",\n            \"Version\\/[VER]\"\n        ],\n        \"BREW\": \"BREW [VER]\",\n        \"Java\": \"Java\\/[VER]\",\n        \"Windows Phone OS\": [\n            \"Windows Phone OS [VER]\",\n            \"Windows Phone [VER]\"\n        ],\n        \"Windows Phone\": \"Windows Phone [VER]\",\n        \"Windows CE\": \"Windows CE\\/[VER]\",\n        \"Windows NT\": \"Windows NT [VER]\",\n        \"Symbian\": [\n            \"SymbianOS\\/[VER]\",\n            \"Symbian\\/[VER]\"\n        ],\n        \"webOS\": [\n            \"webOS\\/[VER]\",\n            \"hpwOS\\/[VER];\"\n        ]\n    },\n    \"utils\": {\n        \"Bot\": \"Googlebot|facebookexternalhit|Google-AMPHTML|s~amp-validator|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|contentkingapp|AspiegelBot\",\n        \"MobileBot\": \"Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker\\/M1A1-R2D2\",\n        \"DesktopMode\": \"WPDesktop\",\n        \"TV\": \"SonyDTV|HbbTV\",\n        \"WebKit\": \"(webkit)[ \\/]([\\\\w.]+)\",\n        \"Console\": \"\\\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\\\b\",\n        \"Watch\": \"SM-V700\"\n    }\n};\n\n    // following patterns come from http://detectmobilebrowsers.com/\n    impl.detectMobileBrowsers = {\n        fullPattern: /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,\n        shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i,\n        tabletPattern: /android|ipad|playbook|silk/i\n    };\n\n    var hasOwnProp = Object.prototype.hasOwnProperty,\n        isArray;\n\n    impl.FALLBACK_PHONE = 'UnknownPhone';\n    impl.FALLBACK_TABLET = 'UnknownTablet';\n    impl.FALLBACK_MOBILE = 'UnknownMobile';\n\n    isArray = ('isArray' in Array) ?\n        Array.isArray : function (value) { return Object.prototype.toString.call(value) === '[object Array]'; };\n\n    function equalIC(a, b) {\n        return a != null && b != null && a.toLowerCase() === b.toLowerCase();\n    }\n\n    function containsIC(array, value) {\n        var valueLC, i, len = array.length;\n        if (!len || !value) {\n            return false;\n        }\n        valueLC = value.toLowerCase();\n        for (i = 0; i < len; ++i) {\n            if (valueLC === array[i].toLowerCase()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function convertPropsToRegExp(object) {\n        for (var key in object) {\n            if (hasOwnProp.call(object, key)) {\n                object[key] = new RegExp(object[key], 'i');\n            }\n        }\n    }\n\n    function prepareUserAgent(userAgent) {\n        return (userAgent || '').substr(0, 500); // mitigate vulnerable to ReDoS\n    }\n\n    (function init() {\n        var key, values, value, i, len, verPos, mobileDetectRules = impl.mobileDetectRules;\n        for (key in mobileDetectRules.props) {\n            if (hasOwnProp.call(mobileDetectRules.props, key)) {\n                values = mobileDetectRules.props[key];\n                if (!isArray(values)) {\n                    values = [values];\n                }\n                len = values.length;\n                for (i = 0; i < len; ++i) {\n                    value = values[i];\n                    verPos = value.indexOf('[VER]');\n                    if (verPos >= 0) {\n                        value = value.substring(0, verPos) + '([\\\\w._\\\\+]+)' + value.substring(verPos + 5);\n                    }\n                    values[i] = new RegExp(value, 'i');\n                }\n                mobileDetectRules.props[key] = values;\n            }\n        }\n        convertPropsToRegExp(mobileDetectRules.oss);\n        convertPropsToRegExp(mobileDetectRules.phones);\n        convertPropsToRegExp(mobileDetectRules.tablets);\n        convertPropsToRegExp(mobileDetectRules.uas);\n        convertPropsToRegExp(mobileDetectRules.utils);\n\n        // copy some patterns to oss0 which are tested first (see issue#15)\n        mobileDetectRules.oss0 = {\n            WindowsPhoneOS: mobileDetectRules.oss.WindowsPhoneOS,\n            WindowsMobileOS: mobileDetectRules.oss.WindowsMobileOS\n        };\n    }());\n\n    /**\n     * Test userAgent string against a set of rules and find the first matched key.\n     * @param {Object} rules (key is String, value is RegExp)\n     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').\n     * @returns {String|null} the matched key if found, otherwise <tt>null</tt>\n     * @private\n     */\n    impl.findMatch = function(rules, userAgent) {\n        for (var key in rules) {\n            if (hasOwnProp.call(rules, key)) {\n                if (rules[key].test(userAgent)) {\n                    return key;\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Test userAgent string against a set of rules and return an array of matched keys.\n     * @param {Object} rules (key is String, value is RegExp)\n     * @param {String} userAgent the navigator.userAgent (or HTTP-Header 'User-Agent').\n     * @returns {Array} an array of matched keys, may be empty when there is no match, but not <tt>null</tt>\n     * @private\n     */\n    impl.findMatches = function(rules, userAgent) {\n        var result = [];\n        for (var key in rules) {\n            if (hasOwnProp.call(rules, key)) {\n                if (rules[key].test(userAgent)) {\n                    result.push(key);\n                }\n            }\n        }\n        return result;\n    };\n\n    /**\n     * Check the version of the given property in the User-Agent.\n     *\n     * @param {String} propertyName\n     * @param {String} userAgent\n     * @return {String} version or <tt>null</tt> if version not found\n     * @private\n     */\n    impl.getVersionStr = function (propertyName, userAgent) {\n        var props = impl.mobileDetectRules.props, patterns, i, len, match;\n        if (hasOwnProp.call(props, propertyName)) {\n            patterns = props[propertyName];\n            len = patterns.length;\n            for (i = 0; i < len; ++i) {\n                match = patterns[i].exec(userAgent);\n                if (match !== null) {\n                    return match[1];\n                }\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Check the version of the given property in the User-Agent.\n     * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)\n     *\n     * @param {String} propertyName\n     * @param {String} userAgent\n     * @return {Number} version or <tt>NaN</tt> if version not found\n     * @private\n     */\n    impl.getVersion = function (propertyName, userAgent) {\n        var version = impl.getVersionStr(propertyName, userAgent);\n        return version ? impl.prepareVersionNo(version) : NaN;\n    };\n\n    /**\n     * Prepare the version number.\n     *\n     * @param {String} version\n     * @return {Number} the version number as a floating number\n     * @private\n     */\n    impl.prepareVersionNo = function (version) {\n        var numbers;\n\n        numbers = version.split(/[a-z._ \\/\\-]/i);\n        if (numbers.length === 1) {\n            version = numbers[0];\n        }\n        if (numbers.length > 1) {\n            version = numbers[0] + '.';\n            numbers.shift();\n            version += numbers.join('');\n        }\n        return Number(version);\n    };\n\n    impl.isMobileFallback = function (userAgent) {\n        return impl.detectMobileBrowsers.fullPattern.test(userAgent) ||\n            impl.detectMobileBrowsers.shortPattern.test(userAgent.substr(0,4));\n    };\n\n    impl.isTabletFallback = function (userAgent) {\n        return impl.detectMobileBrowsers.tabletPattern.test(userAgent);\n    };\n\n    impl.prepareDetectionCache = function (cache, userAgent, maxPhoneWidth) {\n        if (cache.mobile !== undefined) {\n            return;\n        }\n        var phone, tablet, phoneSized;\n\n        // first check for stronger tablet rules, then phone (see issue#5)\n        tablet = impl.findMatch(impl.mobileDetectRules.tablets, userAgent);\n        if (tablet) {\n            cache.mobile = cache.tablet = tablet;\n            cache.phone = null;\n            return; // unambiguously identified as tablet\n        }\n\n        phone = impl.findMatch(impl.mobileDetectRules.phones, userAgent);\n        if (phone) {\n            cache.mobile = cache.phone = phone;\n            cache.tablet = null;\n            return; // unambiguously identified as phone\n        }\n\n        // our rules haven't found a match -> try more general fallback rules\n        if (impl.isMobileFallback(userAgent)) {\n            phoneSized = MobileDetect.isPhoneSized(maxPhoneWidth);\n            if (phoneSized === undefined) {\n                cache.mobile = impl.FALLBACK_MOBILE;\n                cache.tablet = cache.phone = null;\n            } else if (phoneSized) {\n                cache.mobile = cache.phone = impl.FALLBACK_PHONE;\n                cache.tablet = null;\n            } else {\n                cache.mobile = cache.tablet = impl.FALLBACK_TABLET;\n                cache.phone = null;\n            }\n        } else if (impl.isTabletFallback(userAgent)) {\n            cache.mobile = cache.tablet = impl.FALLBACK_TABLET;\n            cache.phone = null;\n        } else {\n            // not mobile at all!\n            cache.mobile = cache.tablet = cache.phone = null;\n        }\n    };\n\n    // t is a reference to a MobileDetect instance\n    impl.mobileGrade = function (t) {\n        // impl note:\n        // To keep in sync w/ Mobile_Detect.php easily, the following code is tightly aligned to the PHP version.\n        // When changes are made in Mobile_Detect.php, copy this method and replace:\n        //     $this-> / t.\n        //     self::MOBILE_GRADE_(.) / '$1'\n        //     , self::VERSION_TYPE_FLOAT / (nothing)\n        //     isIOS() / os('iOS')\n        //     [reg] / (nothing)   <-- jsdelivr complaining about unescaped unicode character U+00AE\n        var $isMobile = t.mobile() !== null;\n\n        if (\n            // Apple iOS 3.2-5.1 - Tested on the original iPad (4.3 / 5.0), iPad 2 (4.3), iPad 3 (5.1), original iPhone (3.1), iPhone 3 (3.2), 3GS (4.3), 4 (4.3 / 5.0), and 4S (5.1)\n            t.os('iOS') && t.version('iPad')>=4.3 ||\n            t.os('iOS') && t.version('iPhone')>=3.1 ||\n            t.os('iOS') && t.version('iPod')>=3.1 ||\n\n            // Android 2.1-2.3 - Tested on the HTC Incredible (2.2), original Droid (2.2), HTC Aria (2.1), Google Nexus S (2.3). Functional on 1.5 & 1.6 but performance may be sluggish, tested on Google G1 (1.5)\n            // Android 3.1 (Honeycomb)  - Tested on the Samsung Galaxy Tab 10.1 and Motorola XOOM\n            // Android 4.0 (ICS)  - Tested on a Galaxy Nexus. Note: transition performance can be poor on upgraded devices\n            // Android 4.1 (Jelly Bean)  - Tested on a Galaxy Nexus and Galaxy 7\n            ( t.version('Android')>2.1 && t.is('Webkit') ) ||\n\n            // Windows Phone 7-7.5 - Tested on the HTC Surround (7.0) HTC Trophy (7.5), LG-E900 (7.5), Nokia Lumia 800\n            t.version('Windows Phone OS')>=7.0 ||\n\n            // Blackberry 7 - Tested on BlackBerry Torch 9810\n            // Blackberry 6.0 - Tested on the Torch 9800 and Style 9670\n            t.is('BlackBerry') && t.version('BlackBerry')>=6.0 ||\n            // Blackberry Playbook (1.0-2.0) - Tested on PlayBook\n            t.match('Playbook.*Tablet') ||\n\n            // Palm WebOS (1.4-2.0) - Tested on the Palm Pixi (1.4), Pre (1.4), Pre 2 (2.0)\n            ( t.version('webOS')>=1.4 && t.match('Palm|Pre|Pixi') ) ||\n            // Palm WebOS 3.0  - Tested on HP TouchPad\n            t.match('hp.*TouchPad') ||\n\n            // Firefox Mobile (12 Beta) - Tested on Android 2.3 device\n            ( t.is('Firefox') && t.version('Firefox')>=12 ) ||\n\n            // Chrome for Android - Tested on Android 4.0, 4.1 device\n            ( t.is('Chrome') && t.is('AndroidOS') && t.version('Android')>=4.0 ) ||\n\n            // Skyfire 4.1 - Tested on Android 2.3 device\n            ( t.is('Skyfire') && t.version('Skyfire')>=4.1 && t.is('AndroidOS') && t.version('Android')>=2.3 ) ||\n\n            // Opera Mobile 11.5-12: Tested on Android 2.3\n            ( t.is('Opera') && t.version('Opera Mobi')>11 && t.is('AndroidOS') ) ||\n\n            // Meego 1.2 - Tested on Nokia 950 and N9\n            t.is('MeeGoOS') ||\n\n            // Tizen (pre-release) - Tested on early hardware\n            t.is('Tizen') ||\n\n            // Samsung Bada 2.0 - Tested on a Samsung Wave 3, Dolphin browser\n            // @todo: more tests here!\n            t.is('Dolfin') && t.version('Bada')>=2.0 ||\n\n            // UC Browser - Tested on Android 2.3 device\n            ( (t.is('UC Browser') || t.is('Dolfin')) && t.version('Android')>=2.3 ) ||\n\n            // Kindle 3 and Fire  - Tested on the built-in WebKit browser for each\n            ( t.match('Kindle Fire') ||\n                t.is('Kindle') && t.version('Kindle')>=3.0 ) ||\n\n            // Nook Color 1.4.1 - Tested on original Nook Color, not Nook Tablet\n            t.is('AndroidOS') && t.is('NookTablet') ||\n\n            // Chrome Desktop 11-21 - Tested on OS X 10.7 and Windows 7\n            t.version('Chrome')>=11 && !$isMobile ||\n\n            // Safari Desktop 4-5 - Tested on OS X 10.7 and Windows 7\n            t.version('Safari')>=5.0 && !$isMobile ||\n\n            // Firefox Desktop 4-13 - Tested on OS X 10.7 and Windows 7\n            t.version('Firefox')>=4.0 && !$isMobile ||\n\n            // Internet Explorer 7-9 - Tested on Windows XP, Vista and 7\n            t.version('MSIE')>=7.0 && !$isMobile ||\n\n            // Opera Desktop 10-12 - Tested on OS X 10.7 and Windows 7\n            // @reference: http://my.opera.com/community/openweb/idopera/\n            t.version('Opera')>=10 && !$isMobile\n\n            ){\n            return 'A';\n        }\n\n        if (\n            t.os('iOS') && t.version('iPad')<4.3 ||\n            t.os('iOS') && t.version('iPhone')<3.1 ||\n            t.os('iOS') && t.version('iPod')<3.1 ||\n\n            // Blackberry 5.0: Tested on the Storm 2 9550, Bold 9770\n            t.is('Blackberry') && t.version('BlackBerry')>=5 && t.version('BlackBerry')<6 ||\n\n            //Opera Mini (5.0-6.5) - Tested on iOS 3.2/4.3 and Android 2.3\n            ( t.version('Opera Mini')>=5.0 && t.version('Opera Mini')<=6.5 &&\n                (t.version('Android')>=2.3 || t.is('iOS')) ) ||\n\n            // Nokia Symbian^3 - Tested on Nokia N8 (Symbian^3), C7 (Symbian^3), also works on N97 (Symbian^1)\n            t.match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3') ||\n\n            // @todo: report this (tested on Nokia N71)\n            t.version('Opera Mobi')>=11 && t.is('SymbianOS')\n            ){\n            return 'B';\n        }\n\n        if (\n        // Blackberry 4.x - Tested on the Curve 8330\n            t.version('BlackBerry')<5.0 ||\n            // Windows Mobile - Tested on the HTC Leo (WinMo 5.2)\n            t.match('MSIEMobile|Windows CE.*Mobile') || t.version('Windows Mobile')<=5.2\n\n            ){\n            return 'C';\n        }\n\n        //All older smartphone platforms and featurephones - Any device that doesn't support media queries\n        //will receive the basic, C grade experience.\n        return 'C';\n    };\n\n    impl.detectOS = function (ua) {\n        return impl.findMatch(impl.mobileDetectRules.oss0, ua) ||\n            impl.findMatch(impl.mobileDetectRules.oss, ua);\n    };\n\n    impl.getDeviceSmallerSide = function () {\n        return window.screen.width < window.screen.height ?\n            window.screen.width :\n            window.screen.height;\n    };\n\n    /**\n     * Constructor for MobileDetect object.\n     * <br>\n     * Such an object will keep a reference to the given user-agent string and cache most of the detect queries.<br>\n     * <div style=\"background-color: #d9edf7; border: 1px solid #bce8f1; color: #3a87ad; padding: 14px; border-radius: 2px; margin-top: 20px\">\n     *     <strong>Find information how to download and install:</strong>\n     *     <a href=\"https://github.com/hgoebl/mobile-detect.js/\">github.com/hgoebl/mobile-detect.js/</a>\n     * </div>\n     *\n     * @example <pre>\n     *     var md = new MobileDetect(window.navigator.userAgent);\n     *     if (md.mobile()) {\n     *         location.href = (md.mobileGrade() === 'A') ? '/mobile/' : '/lynx/';\n     *     }\n     * </pre>\n     *\n     * @param {string} userAgent typically taken from window.navigator.userAgent or http_header['User-Agent']\n     * @param {number} [maxPhoneWidth=600] <strong>only for browsers</strong> specify a value for the maximum\n     *        width of smallest device side (in logical \"CSS\" pixels) until a device detected as mobile will be handled\n     *        as phone.\n     *        This is only used in cases where the device cannot be classified as phone or tablet.<br>\n     *        See <a href=\"http://developer.android.com/guide/practices/screens_support.html\">Declaring Tablet Layouts\n     *        for Android</a>.<br>\n     *        If you provide a value < 0, then this \"fuzzy\" check is disabled.\n     * @constructor\n     * @global\n     */\n    function MobileDetect(userAgent, maxPhoneWidth) {\n        this.ua = prepareUserAgent(userAgent);\n        this._cache = {};\n        //600dp is typical 7\" tablet minimum width\n        this.maxPhoneWidth = maxPhoneWidth || 600;\n    }\n\n    MobileDetect.prototype = {\n        constructor: MobileDetect,\n\n        /**\n         * Returns the detected phone or tablet type or <tt>null</tt> if it is not a mobile device.\n         * <br>\n         * For a list of possible return values see {@link MobileDetect#phone} and {@link MobileDetect#tablet}.<br>\n         * <br>\n         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against\n         * the patterns of <a href=\"http://detectmobilebrowsers.com/\">detectmobilebrowsers.com</a>. If this test\n         * is positive, a value of <code>UnknownPhone</code>, <code>UnknownTablet</code> or\n         * <code>UnknownMobile</code> is returned.<br>\n         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>\n         * <br>\n         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>\n         * and <code>UnknownMobile</code>, so you will get <code>UnknownMobile</code> here.<br>\n         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:\n         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.\n         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.\n         * <br>\n         * In most cases you will use the return value just as a boolean.\n         *\n         * @returns {String} the key for the phone family or tablet family, e.g. \"Nexus\".\n         * @function MobileDetect#mobile\n         */\n        mobile: function () {\n            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);\n            return this._cache.mobile;\n        },\n\n        /**\n         * Returns the detected phone type/family string or <tt>null</tt>.\n         * <br>\n         * The returned tablet (family or producer) is one of following keys:<br>\n         * <br><tt>iPhone, BlackBerry, Pixel, HTC, Nexus, Dell, Motorola, Samsung, LG, Sony, Asus,\n         * Xiaomi, NokiaLumia, Micromax, Palm, Vertu, Pantech, Fly, Wiko, iMobile,\n         * SimValley, Wolfgang, Alcatel, Nintendo, Amoi, INQ, OnePlus, GenericPhone</tt><br>\n         * <br>\n         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against\n         * the patterns of <a href=\"http://detectmobilebrowsers.com/\">detectmobilebrowsers.com</a>. If this test\n         * is positive, a value of <code>UnknownPhone</code> or <code>UnknownMobile</code> is returned.<br>\n         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>\n         * <br>\n         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>\n         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}\n         * will return <code>UnknownMobile</code>.<br>\n         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:\n         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.\n         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.\n         * <br>\n         * In most cases you will use the return value just as a boolean.\n         *\n         * @returns {String} the key of the phone family or producer, e.g. \"iPhone\"\n         * @function MobileDetect#phone\n         */\n        phone: function () {\n            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);\n            return this._cache.phone;\n        },\n\n        /**\n         * Returns the detected tablet type/family string or <tt>null</tt>.\n         * <br>\n         * The returned tablet (family or producer) is one of following keys:<br>\n         * <br><tt>iPad, NexusTablet, GoogleTablet, SamsungTablet, Kindle, SurfaceTablet,\n         * HPTablet, AsusTablet, BlackBerryTablet, HTCtablet, MotorolaTablet, NookTablet,\n         * AcerTablet, ToshibaTablet, LGTablet, FujitsuTablet, PrestigioTablet,\n         * LenovoTablet, DellTablet, YarvikTablet, MedionTablet, ArnovaTablet,\n         * IntensoTablet, IRUTablet, MegafonTablet, EbodaTablet, AllViewTablet,\n         * ArchosTablet, AinolTablet, NokiaLumiaTablet, SonyTablet, PhilipsTablet,\n         * CubeTablet, CobyTablet, MIDTablet, MSITablet, SMiTTablet, RockChipTablet,\n         * FlyTablet, bqTablet, HuaweiTablet, NecTablet, PantechTablet, BronchoTablet,\n         * VersusTablet, ZyncTablet, PositivoTablet, NabiTablet, KoboTablet, DanewTablet,\n         * TexetTablet, PlaystationTablet, TrekstorTablet, PyleAudioTablet, AdvanTablet,\n         * DanyTechTablet, GalapadTablet, MicromaxTablet, KarbonnTablet, AllFineTablet,\n         * PROSCANTablet, YONESTablet, ChangJiaTablet, GUTablet, PointOfViewTablet,\n         * OvermaxTablet, HCLTablet, DPSTablet, VistureTablet, CrestaTablet,\n         * MediatekTablet, ConcordeTablet, GoCleverTablet, ModecomTablet, VoninoTablet,\n         * ECSTablet, StorexTablet, VodafoneTablet, EssentielBTablet, RossMoorTablet,\n         * iMobileTablet, TolinoTablet, AudioSonicTablet, AMPETablet, SkkTablet,\n         * TecnoTablet, JXDTablet, iJoyTablet, FX2Tablet, XoroTablet, ViewsonicTablet,\n         * VerizonTablet, OdysTablet, CaptivaTablet, IconbitTablet, TeclastTablet,\n         * OndaTablet, JaytechTablet, BlaupunktTablet, DigmaTablet, EvolioTablet,\n         * LavaTablet, AocTablet, MpmanTablet, CelkonTablet, WolderTablet, MediacomTablet,\n         * MiTablet, NibiruTablet, NexoTablet, LeaderTablet, UbislateTablet,\n         * PocketBookTablet, KocasoTablet, HisenseTablet, Hudl, TelstraTablet,\n         * GenericTablet</tt><br>\n         * <br>\n         * If the device is not detected by the regular expressions from Mobile-Detect, a test is made against\n         * the patterns of <a href=\"http://detectmobilebrowsers.com/\">detectmobilebrowsers.com</a>. If this test\n         * is positive, a value of <code>UnknownTablet</code> or <code>UnknownMobile</code> is returned.<br>\n         * When used in browser, the decision whether phone or tablet is made based on <code>screen.width/height</code>.<br>\n         * <br>\n         * When used server-side (node.js), there is no way to tell the difference between <code>UnknownTablet</code>\n         * and <code>UnknownMobile</code>, so you will get <code>null</code> here, while {@link MobileDetect#mobile}\n         * will return <code>UnknownMobile</code>.<br>\n         * Be aware that since v1.0.0 in this special case you will get <code>UnknownMobile</code> only for:\n         * {@link MobileDetect#mobile}, not for {@link MobileDetect#phone} and {@link MobileDetect#tablet}.\n         * In versions before v1.0.0 all 3 methods returned <code>UnknownMobile</code> which was tedious to use.\n         * <br>\n         * In most cases you will use the return value just as a boolean.\n         *\n         * @returns {String} the key of the tablet family or producer, e.g. \"SamsungTablet\"\n         * @function MobileDetect#tablet\n         */\n        tablet: function () {\n            impl.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth);\n            return this._cache.tablet;\n        },\n\n        /**\n         * Returns the (first) detected user-agent string or <tt>null</tt>.\n         * <br>\n         * The returned user-agent is one of following keys:<br>\n         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,\n         * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Mercury,\n         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>\n         * <br>\n         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare\n         * cases where a mobile device pretends to be more than one particular browser. You can get the\n         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by\n         * providing one of the defined keys as first argument to {@link MobileDetect#is}.\n         *\n         * @returns {String} the key for the detected user-agent or <tt>null</tt>\n         * @function MobileDetect#userAgent\n         */\n        userAgent: function () {\n            if (this._cache.userAgent === undefined) {\n                this._cache.userAgent = impl.findMatch(impl.mobileDetectRules.uas, this.ua);\n            }\n            return this._cache.userAgent;\n        },\n\n        /**\n         * Returns all detected user-agent strings.\n         * <br>\n         * The array is empty or contains one or more of following keys:<br>\n         * <br><tt>Chrome, Dolfin, Opera, Skyfire, Edge, IE, Firefox, Bolt, TeaShark, Blazer,\n         * Safari, WeChat, UCBrowser, baiduboxapp, baidubrowser, DiigoBrowser, Mercury,\n         * ObigoBrowser, NetFront, GenericBrowser, PaleMoon</tt><br>\n         * <br>\n         * In most cases calling {@link MobileDetect#userAgent} will be sufficient. But there are rare\n         * cases where a mobile device pretends to be more than one particular browser. You can get the\n         * list of all matches with {@link MobileDetect#userAgents} or check for a particular value by\n         * providing one of the defined keys as first argument to {@link MobileDetect#is}.\n         *\n         * @returns {Array} the array of detected user-agent keys or <tt>[]</tt>\n         * @function MobileDetect#userAgents\n         */\n        userAgents: function () {\n            if (this._cache.userAgents === undefined) {\n                this._cache.userAgents = impl.findMatches(impl.mobileDetectRules.uas, this.ua);\n            }\n            return this._cache.userAgents;\n        },\n\n        /**\n         * Returns the detected operating system string or <tt>null</tt>.\n         * <br>\n         * The operating system is one of following keys:<br>\n         * <br><tt>AndroidOS, BlackBerryOS, PalmOS, SymbianOS, WindowsMobileOS, WindowsPhoneOS,\n         * iOS, iPadOS, SailfishOS, MeeGoOS, MaemoOS, JavaOS, webOS, badaOS, BREWOS</tt><br>\n         *\n         * @returns {String} the key for the detected operating system.\n         * @function MobileDetect#os\n         */\n        os: function () {\n            if (this._cache.os === undefined) {\n                this._cache.os = impl.detectOS(this.ua);\n            }\n            return this._cache.os;\n        },\n\n        /**\n         * Get the version (as Number) of the given property in the User-Agent.\n         * <br>\n         * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)\n         *\n         * @param {String} key a key defining a thing which has a version.<br>\n         *        You can use one of following keys:<br>\n         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,\n         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,\n         * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,\n         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon,\n         * SailfishBrowser, Gecko, Trident, Presto, Goanna, iOS, Android, Sailfish,\n         * BlackBerry, BREW, Java, Windows Phone OS, Windows Phone, Windows CE, Windows\n         * NT, Symbian, webOS</tt><br>\n         *\n         * @returns {Number} the version as float or <tt>NaN</tt> if User-Agent doesn't contain this version.\n         *          Be careful when comparing this value with '==' operator!\n         * @function MobileDetect#version\n         */\n        version: function (key) {\n            return impl.getVersion(key, this.ua);\n        },\n\n        /**\n         * Get the version (as String) of the given property in the User-Agent.\n         * <br>\n         *\n         * @param {String} key a key defining a thing which has a version.<br>\n         *        You can use one of following keys:<br>\n         * <br><tt>Mobile, Build, Version, VendorID, iPad, iPhone, iPod, Kindle, Chrome, Coast,\n         * Dolfin, Firefox, Fennec, Edge, IE, NetFront, NokiaBrowser, Opera, Opera Mini,\n         * Opera Mobi, UCBrowser, MQQBrowser, MicroMessenger, baiduboxapp, baidubrowser,\n         * SamsungBrowser, Iron, Safari, Skyfire, Tizen, Webkit, PaleMoon,\n         * SailfishBrowser, Gecko, Trident, Presto, Goanna, iOS, Android, Sailfish,\n         * BlackBerry, BREW, Java, Windows Phone OS, Windows Phone, Windows CE, Windows\n         * NT, Symbian, webOS</tt><br>\n         *\n         * @returns {String} the \"raw\" version as String or <tt>null</tt> if User-Agent doesn't contain this version.\n         *\n         * @function MobileDetect#versionStr\n         */\n        versionStr: function (key) {\n            return impl.getVersionStr(key, this.ua);\n        },\n\n        /**\n         * Global test key against userAgent, os, phone, tablet and some other properties of userAgent string.\n         *\n         * @param {String} key the key (case-insensitive) of a userAgent, an operating system, phone or\n         *        tablet family.<br>\n         *        For a complete list of possible values, see {@link MobileDetect#userAgent},\n         *        {@link MobileDetect#os}, {@link MobileDetect#phone}, {@link MobileDetect#tablet}.<br>\n         *        Additionally you have following keys:<br>\n         * <br><tt>Bot, MobileBot, DesktopMode, TV, WebKit, Console, Watch</tt><br>\n         *\n         * @returns {boolean} <tt>true</tt> when the given key is one of the defined keys of userAgent, os, phone,\n         *                    tablet or one of the listed additional keys, otherwise <tt>false</tt>\n         * @function MobileDetect#is\n         */\n        is: function (key) {\n            return containsIC(this.userAgents(), key) ||\n                   equalIC(key, this.os()) ||\n                   equalIC(key, this.phone()) ||\n                   equalIC(key, this.tablet()) ||\n                   containsIC(impl.findMatches(impl.mobileDetectRules.utils, this.ua), key);\n        },\n\n        /**\n         * Do a quick test against navigator::userAgent.\n         *\n         * @param {String|RegExp} pattern the pattern, either as String or RegExp\n         *                        (a string will be converted to a case-insensitive RegExp).\n         * @returns {boolean} <tt>true</tt> when the pattern matches, otherwise <tt>false</tt>\n         * @function MobileDetect#match\n         */\n        match: function (pattern) {\n            if (!(pattern instanceof RegExp)) {\n                pattern = new RegExp(pattern, 'i');\n            }\n            return pattern.test(this.ua);\n        },\n\n        /**\n         * Checks whether the mobile device can be considered as phone regarding <code>screen.width</code>.\n         * <br>\n         * Obviously this method makes sense in browser environments only (not for Node.js)!\n         * @param {number} [maxPhoneWidth] the maximum logical pixels (aka. CSS-pixels) to be considered as phone.<br>\n         *        The argument is optional and if not present or falsy, the value of the constructor is taken.\n         * @returns {boolean|undefined} <code>undefined</code> if screen size wasn't detectable, else <code>true</code>\n         *          when screen.width is less or equal to maxPhoneWidth, otherwise <code>false</code>.<br>\n         *          Will always return <code>undefined</code> server-side.\n         */\n        isPhoneSized: function (maxPhoneWidth) {\n            return MobileDetect.isPhoneSized(maxPhoneWidth || this.maxPhoneWidth);\n        },\n\n        /**\n         * Returns the mobile grade ('A', 'B', 'C').\n         *\n         * @returns {String} one of the mobile grades ('A', 'B', 'C').\n         * @function MobileDetect#mobileGrade\n         */\n        mobileGrade: function () {\n            if (this._cache.grade === undefined) {\n                this._cache.grade = impl.mobileGrade(this);\n            }\n            return this._cache.grade;\n        }\n    };\n\n    // environment-dependent\n    if (typeof window !== 'undefined' && window.screen) {\n        MobileDetect.isPhoneSized = function (maxPhoneWidth) {\n            return maxPhoneWidth < 0 ? undefined : impl.getDeviceSmallerSide() <= maxPhoneWidth;\n        };\n    } else {\n        MobileDetect.isPhoneSized = function () {};\n    }\n\n    // should not be replaced by a completely new object - just overwrite existing methods\n    MobileDetect._impl = impl;\n    \n    MobileDetect.version = '1.4.5 2021-03-13';\n\n    return MobileDetect;\n}); // end of call of define()\n})((function (undefined) {\n    if (typeof module !== 'undefined' && module.exports) {\n        return function (factory) { module.exports = factory(); };\n    } else if (typeof define === 'function' && define.amd) {\n        return define;\n    } else if (typeof window !== 'undefined') {\n        return function (factory) { window.MobileDetect = factory(); };\n    } else {\n        // please file a bug if you get this error!\n        throw new Error('unknown environment');\n    }\n})());","'use strict';\n\nwindow.client = window.client || {};\n\nconst MobileDetect = require('mobile-detect');\n\nconst status_request = new Request('/status');\nconst status_request_first = new Request('/status?first=true');\nconst scan_request = new Request('/scan');\n//const signal_request = new Request('/signal');\n\n\nconst PING_INTERVAL = 1 * 1000;  // 1 second\nconst STATUS_INTERVAL = 2 * 1000;  // 2 seconds\nconst SCAN_INTERVAL = 5 * 1000;  // 5 seconds\n//const SIGNAL_INTERVAL = 1 * 1000;  // 1 second\n\nlet current_ssid;\nlet current_rssi;\nlet connection_error;\nlet connection_timeout;\nlet attempt_browser_close;\n\n\n// setTimeout but then wait for the first full frame after that\n// (so we can check isVisible without triggering any reflows)\nfunction setTimeoutAnimationFrame(callback, interval) {\n    setTimeout(() => window.requestAnimationFrame(callback), interval);\n}\n\n\nasync function monitorServer() {\n    try {\n        let response = await fetch('/ping');\n\tdocument.body.classList.remove('noserver');\n    } catch(err) {\n        console.error(err);\n\tdocument.body.classList.add('noserver');\n    }\n    setTimeoutAnimationFrame(monitorServer, PING_INTERVAL);\n}\n\n\nasync function monitorStatus() {\n    try {\n        let response = await fetch(first ? status_request_first : status_request);\n\tfirst = false;\n        let data = await response.json();\n\tif (data && !data.retry && Object.keys(data).length !== 0) {\n\t    showStatus(data);\n\t}\n    } catch(err) {\n        console.error(err);\n    }\n    setTimeoutAnimationFrame(monitorStatus, STATUS_INTERVAL);\n}\n\n\nlet first = true;\nlet last_status;  // for the popup info panel\nfunction showStatus(status) {\n    let state = status.wpa_state;\n    let wifi_connected = (state === 'COMPLETED');\n    let wifi_ssid;\n    if (state && status.ssid) {\n\twifi_ssid = status.ssid;\n\twifi_ssid = wifi_ssid.replace(/\\n$/, '');  // remove newline at end of string\n    }\n    if (wifi_connected) {\n\tconnection_error = false;\n    }\n    \n    last_status = status;  // for the popup info panel\n\n    console.log('wifi_ssid', wifi_ssid, 'wifi_connected', wifi_connected);\n\n    if (wifi_connected && document.body.classList.contains('connecting')) {\n\tdocument.body.classList.remove('connecting');\n\tdocument.body.classList.add('checking');\n\t// let ssid_input = document.querySelector('#ssid');\n\t// let password_input = document.querySelector('#password');\n\t// ssid_input.value = '';\n\t// password_input.value = '';\n    }\n\n    if (wifi_connected) {\n\tif (!(document.body.classList.contains('wifi-connected')) && !(document.body.classList.contains('disconnecting'))) {\n\t    document.body.classList.add('wifi-connected');\n\t    //document.body.classList.add('checking');\n\n\t    if (connection_timeout) {\n\t\tclearTimeout(connection_timeout);\n\t    }\n\t    connection_timeout = setTimeout( () => {\n\t\tconnection_timeout = undefined;\n\t\tdocument.body.classList.remove('checking');\n\t\tif (wifi_connected && !(document.body.classList.contains('server-connected'))) {\n\t\t    document.body.classList.add('contactus');\n\t\t    document.body.classList.add('contactus2');\n\t\t} else {\n\t\t    document.body.classList.remove('contactus');\n\t\t    document.body.classList.remove('contactus2');\n\t\t    connect_attempts = 0;\n\t\t}\n\t    }, 25 * 1000);\n\t}\n    } else {\n\tdocument.body.classList.remove('wifi-connected');\n\tdocument.body.classList.remove('contactus');\n\tdocument.body.classList.remove('checking');\n\tfirst = true;\n    }\n\n    document.body.classList.remove('jibo-connected');\n    document.body.classList.remove('jibo-not-connected');\n    if (('jibo_connected' in status) && status.jibo_connected !== undefined) {\n\tif (status.jibo_connected) {\n\t    document.body.classList.add('jibo-connected');\n\t} else {\n\t    document.body.classList.add('contactus');\n\t    document.body.classList.add('jibo-not-connected');\n\t}\n    }\n\n    document.body.classList.remove('internet-connected');\n    document.body.classList.remove('internet-not-connected');\n    console.log(status.internet_connected);\n    if (('internet_connected' in status) && status.internet_connected !== undefined) {\n\tif (status.internet_connected) {\n\t    document.body.classList.add('internet-connected');\n\t} else {\n\t    document.body.classList.remove('checking');\n\t    document.body.classList.add('contactus');\n\t    document.body.classList.add('internet-not-connected');\n\t}\n    }\n\n    document.body.classList.remove('server-connected');\n    document.body.classList.remove('server-not-connected');\n    if (('server_connected' in status) && status.server_connected !== undefined) {\n\tdocument.body.classList.remove('checking');\n\tif (status.server_connected) {\n\t    document.body.classList.add('server-connected');\n\t} else {\n\t    document.body.classList.add('contactus');\n\t    document.body.classList.add('server-not-connected');\n\t}\n    }\n\n    showConnection(wifi_ssid || current_ssid, wifi_connected, connection_error);\n}\n\n\nfunction showConnection(wifi_ssid, wifi_connected, wifi_error) {\n    let connectiondiv = document.querySelector('#connection');\n    let template = document.querySelector('#wifi_connection_none');\n    let div = template.content.firstElementChild.cloneNode(true);\n    let connecting = document.body.classList.contains('connecting');\n    let disconnecting = document.body.classList.contains('disconnecting');\n    if (connecting || disconnecting) {\n\ttemplate = document.querySelector('#wifi_connection_blank');\n\tdiv = template.content.firstElementChild.cloneNode(true);\n    } else if (wifi_connected) {\n\tcurrent_ssid = wifi_ssid;\n\ttemplate = document.querySelector('#wifi_connection_good');\n\tdiv = template.content.firstElementChild.cloneNode(true);\n\tconsole.log(wifi_ssid, div, div.querySelector('#wifi_ssid'));\n\tif (wifi_ssid)    div.querySelector('#wifi_ssid').textContent = wifi_ssid;\n\tif (current_rssi) div.querySelector('#wifi_bars').classList.add('bars-'+ rssiToBars(current_rssi, true), 'bars-bigger');\n    } else if (wifi_error) {\n\ttemplate = document.querySelector('#wifi_connection_error');\n\tdiv = template.content.firstElementChild.cloneNode(true);\n\tif (wifi_ssid) div.querySelector('#wifi_ssid').textContent = wifi_ssid;\n\tdiv.querySelector('#line2').textContent = wifi_error;\n    }\n    connectiondiv.replaceChildren(div);\n}\n\n\nfunction loadContactMessages(project) {\n    let wellness = false;\n    if (project === 'wellness') {\n\twellness = true;\n    }\n    \n    let contactusdiv = document.querySelector('#contactus');\n    let contactus2div = document.querySelector('#contactus2');\n    let contactus0div = document.querySelector('#contactus0');\n    let template;\n    let template2;\n    if (wellness) {\n\ttemplate = document.querySelector('#contactus_wellness');\n\ttemplate2 = document.querySelector('#contactus2_wellness');\n    } else {\n\ttemplate = document.querySelector('#contactus_generic');\n\ttemplate2 = document.querySelector('#contactus2_generic');\n    }\n    let center = template.content.firstElementChild.cloneNode(true);\n    let center2 = template2.content.firstElementChild.cloneNode(true);\n    let center0 = template.content.firstElementChild.cloneNode(true);\n    contactusdiv.replaceChildren(center);\n    contactus2div.replaceChildren(center2);\n    contactus0div.replaceChildren(center0);\n}\n\n\nasync function monitorScan() {\n    try {\n        let response = await fetch(scan_request);\n        let data = await response.json();\n\t//console.log(data);\n\tif (data && !data.retry && Object.keys(data).length !== 0) {\n\t    showScan(data);\n\t}\n    } catch(err) {\n        console.error(err);\n    }\n    setTimeoutAnimationFrame(monitorScan, SCAN_INTERVAL);\n}\n\n\nfunction showScan(data) {\n    let network_list = document.querySelector('#network_list');\n    let template = document.querySelector('#network_list_entry');\n    let seen = [];\n    let entries = document.createDocumentFragment();\n    current_rssi = undefined;\n    try {\n\tfor (let n=0; n<data.length; n++) {\n\t    let network = data[n];\n\t    let ssid = network.ssid;\n\t    if (!ssid || ssid.includes('\\x00') || ssid.includes('\\\\x00')) {\n\t\tcontinue;\n\t    }\n\t    if (ssid.startsWith('s02-') || ssid.startsWith('JiboStation')) {\n\t\tcontinue;\n\t    }\n\t    if (seen.includes(ssid)) {\n\t\tcontinue;\n\t    }\n\t    seen.push(ssid);\n\n\t    let li = template.content.firstElementChild.cloneNode(true);\n\t    let open = (!network.security) || network.security === \"open\";\n\t    li.querySelector('#wifi_security').textContent = (open ? '' : '🔒' );\n\t    li.querySelector('#wifi_bars').classList.add('bars-'+rssiToBars(network.signal));\n\t    li.querySelector('#wifi_ssid').textContent = ssid;\n\t    li.addEventListener('click', click_network);\n\n\t    entries.appendChild(li);\n\n\t    if (ssid === current_ssid) {\n\t\tcurrent_rssi = network.signal;\n\t    }\n\t}\n    } catch(err) {\n\tconsole.error(err);\n    }\n    network_list.replaceChildren(entries);\n    ssid_changed();\n}\n\n\nfunction rssiToBars(rssi) {\n    let quanta = 0;\n    if (rssi > -40) {\n\tquanta = 3;\n    } else if (rssi > -65) {\n\tquanta = 2;\n    } else if (rssi > -80) {\n\tquanta = 1;\n    }\n    return quanta;\n}\n\n\n// async function monitorSignal() {\n//     try {\n//         let response = await fetch(signal_request);\n//         let data = await response.json();\n// \tif (data && !data.retry && Object.keys(data).length !== 0) {\n// \t    showSignal(data);\n// \t}\n//     } catch(err) {\n//         console.error(err);\n//     }\n//     setTimeoutAnimationFrame(monitorSignal, SIGNAL_INTERVAL);\n// }\n\n\n// function showSignal(data) {\n//     console.log('signal', data);\n// }\n\n\nfunction toggle_body_class(classname) {\n    if (document.body.classList.contains(classname)) {\n\tdocument.body.classList.remove(classname);\n    } else {\n\tdocument.body.classList.add(classname);\n    }\n}\n\n\nfunction reset_scroll(selector) {\n    let section = document.querySelector(selector);\n    if (section) {\n\t//section.scrollTop = 0;\n\tsection.scrollIntoView();\n\t//section.focus();\n    }\n}\n\n\nlet connect_attempts = 0;\nasync function connect_wifi(event) {\n    console.log(event);\n    console.log(event.target);\n    event.preventDefault();\n\n    let formdata = new FormData(event.target);\n    let ssid = formdata.get('ssid');\n    let password = formdata.get('password');\n    let feedbackdiv = document.querySelector('#feedback');\n\n    document.body.classList.add('connecting');\n    showConnection();\n    connect_attempts++;\n    if (connect_attempts > 1) {\n\tdocument.body.classList.add('contactus2');\n    }\n\n    try {\n\t//reset_scroll('#wifi_section');\n\n\tconsole.log(formdata);\n\tconsole.log(formdata.get('ssid'));\n\tconsole.log(formdata.get('password'));\n\n\tlet trim_space = document.querySelector('#trim_spaces');\n\tif (!trim_space || trim_space.checked) {\n\t    console.log('trimming spaces');\n\t    ssid = ssid.trim();\n\t    password = password.trim();\n\t}\n\n\tfeedback.textContent = \"Connecting to \" + ssid + \"...\";\n\tconnection_error = false;\n\n\t//await fetch(new Request('/connect',{method:'POST',body:formdata}))\n\n\tlet data = {\n\t    ssid,\n\t    password,\n\t};\n\n\tawait fetch('/connect', {\n\t    method: 'POST',\n\t    body: JSON.stringify(data),\n\t    headers: {\n\t\t'Content-Type': 'application/json'\n\t    }\n\t});\n    } catch(err) {\n\tconsole.error('error during connect', err);\n    }\n    connection_timeout = setTimeout( () => {\n\tconnection_timeout = undefined;\n\tif (document.body.classList.contains('connecting')) {\n\t    document.body.classList.remove('connecting');\n\t    let matched = ssid_changed();\n\t    if (matched) {\n\t\tconnection_error = 'Password might be incorrect';\n\t    } else {\n\t\tconnection_error = 'Network name or password might be incorrect';\n\t    }\n\t    showConnection(ssid, false, connection_error);\n\t    current_ssid = ssid;\n\t}\n    }, 15 * 1000);\n}\n\n\nfunction cancel_connecting() {\n    if (connection_timeout) {\n\tclearTimeout(connection_timeout);\n\tconnection_timeout = undefined;\n\tdocument.body.classList.remove('connecting');\n    }\n    disconnect_wifi();\n}\n\n\nasync function disconnect_wifi() {\n    document.body.classList.add('disconnecting');\n    document.body.classList.remove('wifi-connected');\n    document.body.classList.remove('connecting');\n    document.body.classList.remove('contactus');\n    showConnection();\n    try {\n\t//reset_scroll('#wifi_section');\n\tlet request = new Request('/disconnect',{ method:'POST' });\n\tfetch(request);\n\t//reset_scroll('#wifi_section');\n    } catch(err) {\n\tconsole.error('error during disconnect', err);\n    }\n    setTimeout( () => {\n\tdocument.body.classList.remove('disconnecting');\n    }, 5 * 1000);\n}\n\n\nfunction toggle_password_visibility(event) {\n    let password = document.querySelector('#password');\n    let toggle = document.querySelector('#visibility');\n    if (password.type !== 'password') {\n\tpassword.type = 'password';\n\tvisibility.textContent = '😆';\n    } else {\n\tpassword.type = 'text';\n\tvisibility.textContent = '👁️';\n    }\t\n    event.preventDefault();  // keep from stealing keyboard focus\n}\n\n\nfunction ssid_changed() {\n    console.log('ssid changed');\n    let ssid_input = document.querySelector('#ssid');\n    let trim_space = document.querySelector('#trim_spaces');\n    let ssid_value = ssid_input.value;\n    if (!trim_space || trim_space.checked) {\n\tssid_value = ssid_value.trim();\n    }\n    let li_entries = document.querySelectorAll('li');\n    let matched = false;\n    for (let li_entry of li_entries) {\n\tlet wifi_ssid = li_entry.querySelector('#wifi_ssid');\n\tif (!wifi_ssid) {\n\t    continue;\n\t}\n\tif (wifi_ssid.textContent === ssid_value) {\n\t    console.log('matched!');\n\t    li_entry.classList.add('matched');\n\t    matched = true;\n\t} else {\n\t    li_entry.classList.remove('matched');\n\t}\n    }\n    return matched;\n}\n\n\nfunction password_focused(event) {\n    let connect_wifi_form = document.querySelector('#connect_wifi_form');\n    //connect_wifi_form.scrollIntoView(false);\n    //setTimeout( () => { connect_wifi_form.scrollIntoView(false); }, 500);\n}\n\n\nfunction click_network(event) {\n    console.log(event.target);\n    let wifi_ssid = event.target.querySelector('#wifi_ssid');\n    let ssid_input = document.querySelector('#ssid');\n    let password_input = document.querySelector('#password');\n    ssid_input.value = wifi_ssid.textContent;\n    ssid_changed();\n    password.value = '';\n    password_input.focus();\n}\n\n\nfunction show_nomatch_panel() {\n    document.body.classList.add('shownomatchpanel');\n}\n\n\nfunction show_info_panel() {\n    document.body.classList.add('showinfopanel');\n    let local_hostname = document.querySelector('#local_hostname');\n    if (last_status && last_status.hostname) {\n\tlocal_hostname.textContent = last_status.hostname;\n    } else {\n\tlocal_hostname.textContent = '➖';\n    }\n    let local_ip_address = document.querySelector('#local_ip_address');\n    if (last_status && last_status.ip_address) {\n\tlocal_ip_address.textContent = last_status.ip_address;\n    } else {\n\tlocal_ip_address.textContent = '➖';\n    }\n    let rover_ip_address = document.querySelector('#rover_ip_address');\n    if (last_status && last_status.rover_ip_address) {\n\trover_ip_address.textContent = last_status.rover_ip_address;\n    } else {\n\trover_ip_address.textContent = '➖';\n    }\n    let dhcp_leases = document.querySelector('#dhcp_leases');\n    if (last_status && last_status.dhcp_leases) {\n\t//dhcp_leases.textContent = last_status.dhcp_leases;\n\tlet template = document.querySelector('#dhcp_leases_template');\n\tlet dhcp_leases_table = template.content.cloneNode(true);\n\tlet entries = document.createDocumentFragment();\n\ttry {\n\t    for (let lease of last_status.dhcp_leases) {\n\t\t// 1625731234 52:01:13:1f:df:8e 10.99.0.13 JiboStation24 01:52:01:13:1f:df:8e\n\t\tlet [lease_time, mac_address, ip_address, dhcp_name, dunnowhatthisis] = lease;\n\t\tif (!ip_address) continue;\n\t\tlet tr = template.content.querySelector('tr').cloneNode(true);\n\t\ttr.querySelector('#lease_time').textContent = lease_time;\n\t\ttr.querySelector('#mac_address').textContent = mac_address;\n\t\ttr.querySelector('#ip_address').textContent = ip_address;\n\t\tif (ip_address === last_status.jibo_ip_address) {\n\t\t    console.info('matched!', ip_address);\n\t\t    tr.classList.add('matched');\n\t\t}\n\t\ttr.querySelector('#dhcp_name').textContent = dhcp_name;\n\t\tentries.appendChild(tr);\n\t    }\n\t} catch(err) {\n\t    console.error(err);\n\t}\n\tdhcp_leases_table.firstElementChild.replaceChildren(entries);\n\tdhcp_leases.replaceChildren(dhcp_leases_table);\n    } else {\n\tdhcp_leases.textContent = '➖';\n    }\n}\n\n\nfunction dismiss_all_panels() {\n    document.body.classList.remove('showinfopanel');\n    document.body.classList.remove('shownomatchpanel');\n    document.body.classList.remove('showdonepanel');\n    ssid_changed();\n}\n\n\nlet hashParams = {};\nfunction parseHash() {\n    let hash = window.location.hash.substr(1);\n    hashParams = hash.split('&').reduce(function (result, item) {\n\tlet parts = item.split('=');\n\tif (typeof parts[1] === 'undefined') {\n\t    parts[1] = true;\n\t}\n\tresult[parts[0]] = parts[1];\n\treturn result;\n    }, {});\n}\n\n\nfunction finished() {\n    if (attempt_browser_close) {\n\ttry {\n\t    window.close();  // actually works on some tables when web page is launched from an icon on the home page\n\t} catch(err) {\n\t    console.log('error from window.close()', err);\n\t}\n    }\n    document.body.classList.add('showdonepanel');\n}\n\n\nasync function init() {\n    //if ('serviceWorker' in navigator) {\n    //\tconsole.log('CLIENT: service worker registration in progress.');\n    //\tnavigator.serviceWorker.register('/service-worker.js').then(function() {\n    //\t    console.log('CLIENT: service worker registration complete.');\n    //\t}, function() {\n    //\t    console.log('CLIENT: service worker registration failure.');\n    //\t});\n    //} else {\n    //\tconsole.log('CLIENT: service worker is not supported.');\n    //}\n\n    //reset_scroll('#wifi_section');\n    //reset_scroll('#sectionholder');\n\n    let md = new MobileDetect(window.navigator.userAgent);\n    console.log('md', md);\n    //window.md = md;\n    let debugstr = JSON.stringify(md);\n    for (let f of ['mobile', 'phone', 'tablet', 'userAgent', 'os']) {\n\tlet v = '';\n\ttry {\n\t    v = JSON.stringify(md[f]());\n\t} catch {\n\t    console.error('error stringifying or calling md.' + f);\n\t}\n\tconsole.log(f, v);\n\tdebugstr += `\\n${f}:${v}`;\n    }\n    debugstr += `\\n${md.version('Android')}`;\n    debugstr += `\\nscreen.width x height: ${window.screen.width} x ${window.screen.height}`;\n    fetch(new Request('/debug',{method:'POST',body:debugstr}));\n\n    parseHash();\n    \n    let project = 'generic';\n    if (hashParams.project) {\n\tproject = hashParams.project;\n    } else {\n\tif (md.tablet()) {\n\t    if (window.screen.width === 1280 && window.screen.height === 800) {\n\t\tproject = 'wellness';\n\t    } else if (window.screen.width === 1138 && window.screen.height === 712) {\n\t\tproject = 'literacy';\n\t    }\n\t}\n\tlet android_version = md.version('Android');\n\tif (android_version) {\n\t    android_version = Number(android_version);\n\t}\n\tif (android_version && android_version >= 9) {\n\t    attempt_browser_close = true;\n\t    fetch(new Request('/debug',{method:'POST',body:'going to attempt browser close on done'}));\n\t}\n    }\n\n    loadContactMessages(project);\n\n    let wifi_form = document.querySelector('#connect_wifi_form');\n    wifi_form.addEventListener('submit', connect_wifi);\n\n    let ssid_input = document.querySelector('#ssid');\n    let password_input = document.querySelector('#password');\n    ssid_input.addEventListener('input', ssid_changed);\n    password_input.addEventListener('focus', password_focused);\n\n    let clickinfo = document.querySelector('#clickinfo');\n    clickinfo.addEventListener('click', show_info_panel);\n    let dismiss_buttons = document.querySelectorAll('#dismiss');\n    for (let dismiss_button of dismiss_buttons) {\n\tdismiss_button.addEventListener('click', dismiss_all_panels);\n    }\n\n    monitorServer();\n    monitorStatus();\n    monitorScan();\n    //monitorSignal();\n}\n\n\nwindow.client.init = init;\nwindow.client.cancel_connecting = cancel_connecting;\nwindow.client.disconnect_wifi = disconnect_wifi;\nwindow.client.click_network = click_network;\nwindow.client.toggle_password_visibility = toggle_password_visibility;\nwindow.client.finished = finished;\n"]}