{"version":3,"sources":["client.js"],"names":["window","client","status_request","Request","scan_request","PING_INTERVAL","STATUS_INTERVAL","SCAN_INTERVAL","current_ssid","current_rssi","connection_error","connection_timeout","last_status","setTimeoutAnimationFrame","callback","interval","setTimeout","requestAnimationFrame","monitorServer","fetch","document","body","classList","remove","err","console","error","add","monitorStatus","response","data","json","retry","Object","keys","length","showStatus","status","state","wifi_ssid","wpa_state","wifi_connected","ssid","replace","undefined","log","contains","clearTimeout","connect_attempts","jibo_connected","internet_connected","server_connected","showConnection","wifi_error","connectiondiv","querySelector","template","div","content","firstElementChild","cloneNode","textContent","rssiToBars","replaceChildren","monitorScan","showScan","network_list","seen","entries","createDocumentFragment","n","network","includes","startsWith","push","li","security","signal","addEventListener","click_network","appendChild","ssid_changed","rssi","quanta","toggle_body_class","classname","reset_scroll","selector","section","scrollIntoView","connect_wifi","event","target","preventDefault","formdata","FormData","get","password","trim_space","checked","trim","feedback","method","JSON","stringify","headers","cancel_connecting","disconnect_wifi","request","toggle_password_visibility","type","visibility","ssid_input","ssid_value","value","li_entries","querySelectorAll","li_entry","password_focused","connect_wifi_form","password_input","focus","show_nomatch_panel","show_info_panel","local_hostname","hostname","local_ip_address","ip_address","rover_ip_address","dismiss_all_panels","init","dismiss_buttons","dismiss_button"],"mappings":"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","file":"client.377c5b6b.js","sourceRoot":"../client","sourcesContent":["'use strict';\n\nwindow.client = window.client || {};\n\nconst status_request = new Request('/status');\nconst scan_request = new Request('/scan');\n//const signal_request = new Request('/signal');\n\n\nconst PING_INTERVAL = 1 * 1000;  // 1 second\nconst STATUS_INTERVAL = 1 * 1000;  // 1 second\nconst SCAN_INTERVAL = 5 * 1000;  // 5 seconds\n//const SIGNAL_INTERVAL = 1 * 1000;  // 1 second\n\nlet current_ssid;\nlet current_rssi;\nlet connection_error;\nlet connection_timeout;\n\n\n// setTimeout but then wait for the first full frame after that\n// (so we can check isVisible without triggering any reflows)\nfunction setTimeoutAnimationFrame(callback, interval) {\n    setTimeout(() => window.requestAnimationFrame(callback), interval);\n}\n\n\nasync function monitorServer() {\n    try {\n        let response = await fetch('/ping');\n\tdocument.body.classList.remove('noserver');\n    } catch(err) {\n        console.error(err);\n\tdocument.body.classList.add('noserver');\n    }\n    setTimeoutAnimationFrame(monitorServer, PING_INTERVAL);\n}\n\n\nasync function monitorStatus() {\n    try {\n        let response = await fetch(status_request);\n        let data = await response.json();\n\tif (data && !data.retry && Object.keys(data).length !== 0) {\n\t    showStatus(data);\n\t}\n    } catch(err) {\n        console.error(err);\n    }\n    setTimeoutAnimationFrame(monitorStatus, STATUS_INTERVAL);\n}\n\n\nlet last_status;  // for the popup info panel\nfunction showStatus(status) {\n    let state = status.wpa_state;\n    let wifi_connected = (state === 'COMPLETED');\n    let wifi_ssid;\n    if (state && status.ssid) {\n\twifi_ssid = status.ssid;\n\twifi_ssid = wifi_ssid.replace(/\\n$/, '');  // remove newline at end of string\n    }\n    if (wifi_connected) {\n\tconnection_error = undefined;\n    }\n    \n    last_status = status;  // for the popup info panel\n\n    console.log('wifi_ssid', wifi_ssid, 'wifi_connected', wifi_connected);\n\n    if (wifi_connected && document.body.classList.contains('connecting')) {\n\tdocument.body.classList.remove('connecting');\n\tdocument.body.classList.add('checking');\n\tconsole.log('1');\n\t// let ssid_input = document.querySelector('#ssid');\n\t// let password_input = document.querySelector('#password');\n\t// ssid_input.value = '';\n\t// password_input.value = '';\n    }\n\n    if (wifi_connected) {\n\tif (!(document.body.classList.contains('wifi-connected'))) {\n\t    document.body.classList.add('wifi-connected');\n\t    document.body.classList.add('checking');\n\t    console.log('2');\n\n\t    if (connection_timeout) {\n\t\tclearTimeout(connection_timeout);\n\t    }\n\t    connection_timeout = setTimeout( () => {\n\t\tconnection_timeout = undefined;\n\t\tdocument.body.classList.remove('checking');\n\t\tconsole.log('3');\n\t\tif (wifi_connected && !(document.body.classList.contains('server-connected'))) {\n\t\t    document.body.classList.add('contactus');\n\t\t    document.body.classList.add('contactus2');\n\t\t} else {\n\t\t    document.body.classList.remove('contactus');\n\t\t    document.body.classList.remove('contactus2');\n\t\t    connect_attempts = 0;\n\t\t}\n\t    }, 15 * 1000);\n\t}\n    } else {\n\tdocument.body.classList.remove('wifi-connected');\n\tdocument.body.classList.remove('contactus');\n\tdocument.body.classList.remove('checking');\n\tconsole.log('4');\n    }\n\n    document.body.classList.remove('jibo-connected');\n    document.body.classList.remove('jibo-not-connected');\n    if (('jibo_connected' in status) && status.jibo_connected !== undefined) {\n\tif (status.jibo_connected) {\n\t    document.body.classList.add('jibo-connected');\n\t} else {\n\t    document.body.classList.remove('checking');\n\t    console.log('5');\n\t    document.body.classList.add('jibo-not-connected');\n\t}\n    }\n\n    document.body.classList.remove('internet-connected');\n    document.body.classList.remove('internet-not-connected');\n    console.log(status.internet_connected);\n    if (('internet_connected' in status) && status.internet_connected !== undefined) {\n\tif (status.internet_connected) {\n\t    document.body.classList.add('internet-connected');\n\t} else {\n\t    //document.body.classList.remove('checking');\n\t    console.log('6');\n\t    document.body.classList.add('internet-not-connected');\n\t}\n    }\n\n    document.body.classList.remove('server-connected');\n    document.body.classList.remove('server-not-connected');\n    if (('server_connected' in status) && status.server_connected !== undefined) {\n\tdocument.body.classList.remove('checking');\n\tconsole.log('7');\n\tif (status.server_connected) {\n\t    document.body.classList.add('server-connected');\n\t} else {\n\t    document.body.classList.add('server-not-connected');\n\t}\n    }\n\n    showConnection(wifi_ssid || current_ssid, wifi_connected, connection_error);\n}\n\n\nfunction showConnection(wifi_ssid, wifi_connected, wifi_error) {\n    let connectiondiv = document.querySelector('#connection');\n    let template = document.querySelector('#wifi_connection_none');\n    let div = template.content.firstElementChild.cloneNode(true);\n    if (wifi_connected) {\n\tcurrent_ssid = wifi_ssid;\n\ttemplate = document.querySelector('#wifi_connection_good');\n\tdiv = template.content.firstElementChild.cloneNode(true);\n\tconsole.log(wifi_ssid, div, div.querySelector('#wifi_ssid'));\n\tif (wifi_ssid)    div.querySelector('#wifi_ssid').textContent = wifi_ssid;\n\tif (current_rssi) div.querySelector('#wifi_bars').classList.add('bars-'+ rssiToBars(current_rssi, true), 'bars-bigger');\n    } else if (wifi_error) {\n\ttemplate = document.querySelector('#wifi_connection_error');\n\tdiv = template.content.firstElementChild.cloneNode(true);\n\tif (wifi_ssid) div.querySelector('#wifi_ssid').textContent = wifi_ssid;\n\tdiv.querySelector('#line2').textContent = wifi_error;\n    }\n\tconnectiondiv.replaceChildren(div);\n}\n\n\nasync function monitorScan() {\n    try {\n        let response = await fetch(scan_request);\n        let json = await response.json();\n\tconsole.log(json);\n\tif (json && !json.retry && Object.keys(json).length !== 0) {\n\t    showScan(json);\n\t}\n    } catch(err) {\n        console.error(err);\n    }\n    setTimeoutAnimationFrame(monitorScan, SCAN_INTERVAL);\n}\n\n\nfunction showScan(json) {\n    let network_list = document.querySelector('#network_list');\n    let template = document.querySelector('#network_list_entry');\n    let seen = [];\n    let entries = document.createDocumentFragment();\n    current_rssi = undefined;\n    try {\n\tfor (let n=0; n<json.length; n++) {\n\t    let network = json[n];\n\t    let ssid = network.ssid;\n\t    if (!ssid || ssid.includes('\\x00') || ssid.includes('\\\\x00')) {\n\t\tcontinue;\n\t    }\n\t    if (ssid.startsWith('s02-') || ssid.startsWith('JiboStation')) {\n\t\tcontinue;\n\t    }\n\t    if (seen.includes(ssid)) {\n\t\tcontinue;\n\t    }\n\t    seen.push(ssid);\n\n\t    let li = template.content.firstElementChild.cloneNode(true);\n\t    li.querySelector('#wifi_security').textContent = (network.security ? '🔒' : '');\n\t    li.querySelector('#wifi_bars').classList.add('bars-'+rssiToBars(network.signal));\n\t    li.querySelector('#wifi_ssid').textContent = ssid;\n\t    li.addEventListener('click', click_network);\n\n\t    entries.appendChild(li);\n\n\t    if (ssid === current_ssid) {\n\t\tcurrent_rssi = network.signal;\n\t    }\n\t}\n    } catch(err) {\n\tconsole.error(err);\n    }\n    network_list.replaceChildren(entries);\n    ssid_changed();\n}\n\n\nfunction rssiToBars(rssi) {\n    let quanta = 0;\n    if (rssi > -40) {\n\tquanta = 3;\n    } else if (rssi > -65) {\n\tquanta = 2;\n    } else if (rssi > -80) {\n\tquanta = 1;\n    }\n    return quanta;\n}\n\n\n// async function monitorSignal() {\n//     try {\n//         let response = await fetch(signal_request);\n//         let data = await response.json();\n// \tif (data && !data.retry && Object.keys(data).length !== 0) {\n// \t    showSignal(data);\n// \t}\n//     } catch(err) {\n//         console.error(err);\n//     }\n//     setTimeoutAnimationFrame(monitorSignal, SIGNAL_INTERVAL);\n// }\n\n\n// function showSignal(data) {\n//     console.log('signal', data);\n// }\n\n\nfunction toggle_body_class(classname) {\n    if (document.body.classList.contains(classname)) {\n\tdocument.body.classList.remove(classname);\n    } else {\n\tdocument.body.classList.add(classname);\n    }\n}\n\n\nfunction reset_scroll(selector) {\n    let section = document.querySelector(selector);\n    if (section) {\n\t//section.scrollTop = 0;\n\tsection.scrollIntoView();\n\t//section.focus();\n    }\n}\n\n\nlet connect_attempts = 0;\nasync function connect_wifi(event) {\n    console.log(event);\n    console.log(event.target);\n    event.preventDefault();\n\n    let formdata = new FormData(event.target);\n    let ssid = formdata.get('ssid');\n    let password = formdata.get('password');\n    let feedbackdiv = document.querySelector('#feedback');\n\n    document.body.classList.add('connecting');\n    connect_attempts++;\n    if (connect_attempts > 1) {\n\tdocument.body.classList.add('contactus2');\n    }\n\n    try {\n\t//reset_scroll('#wifi_section');\n\n\tconsole.log(formdata);\n\tconsole.log(formdata.get('ssid'));\n\tconsole.log(formdata.get('password'));\n\n\tlet trim_space = document.querySelector('#trim_spaces');\n\tif (!trim_space || trim_space.checked) {\n\t    console.log('trimming spaces');\n\t    ssid = ssid.trim();\n\t    password = password.trim();\n\t}\n\n\tfeedback.textContent = \"Connecting to \" + ssid + \"...\";\n\tconnection_error = undefined;\n\n\t//await fetch(new Request('/connect',{method:'POST',body:formdata}))\n\n\tlet data = {\n\t    ssid,\n\t    password,\n\t};\n\n\tawait fetch('/connect', {\n\t    method: 'POST',\n\t    body: JSON.stringify(data),\n\t    headers: {\n\t\t'Content-Type': 'application/json'\n\t    }\n\t});\n    } catch(err) {\n\tconsole.error('error during connect', err);\n    }\n    connection_timeout = setTimeout( () => {\n\tconnection_timeout = undefined;\n\tif (document.body.classList.contains('connecting')) {\n\t    document.body.classList.remove('connecting');\n\t    connection_error = `password might be incorrect`;\n\t    showConnection(ssid, false, connection_error);\n\t    current_ssid = ssid;\n\t}\n    }, 10 * 1000);\n}\n\n\nfunction cancel_connecting() {\n    if (connection_timeout) {\n\tclearTimeout(connection_timeout);\n\tconnection_timeout = undefined;\n\tdocument.body.classList.remove('connecting');\n    }\n}\n\n\nasync function disconnect_wifi() {\n    document.body.classList.add('disconnecting');\n    document.body.classList.remove('contactus');\n    try {\n\t//reset_scroll('#wifi_section');\n\tlet request = new Request('/disconnect',{ method:'POST' });\n\tfetch(request);\n\t//reset_scroll('#wifi_section');\n    } catch(err) {\n\tconsole.error('error during disconnect', err);\n    }\n    setTimeout( () => {\n\tdocument.body.classList.remove('disconnecting');\n    }, 5 * 1000);\n}\n\n\nfunction toggle_password_visibility(event) {\n    let password = document.querySelector('#password');\n    let toggle = document.querySelector('#visibility');\n    if (password.type !== 'password') {\n\tpassword.type = 'password';\n\tvisibility.textContent = '😆';\n    } else {\n\tpassword.type = 'text';\n\tvisibility.textContent = '👁️';\n    }\t\n    event.preventDefault();  // keep from stealing keyboard focus\n}\n\n\nfunction ssid_changed(event) {\n    console.log('ssid changed');\n    let ssid_input = document.querySelector('#ssid');\n    let trim_space = document.querySelector('#trim_spaces');\n    let ssid_value = ssid_input.value;\n    if (!trim_space || trim_space.checked) {\n\tssid_value = ssid_value.trim();\n    }\n    let li_entries = document.querySelectorAll('li');\n    for (let li_entry of li_entries) {\n\tlet wifi_ssid = li_entry.querySelector('#wifi_ssid');\n\tif (!wifi_ssid) {\n\t    continue;\n\t}\n\tif (wifi_ssid.textContent === ssid_value) {\n\t    console.log('matched!');\n\t    li_entry.classList.add('matched');\n\t} else {\n\t    li_entry.classList.remove('matched');\n\t}\n    }\n}\n\n\nfunction password_focused(event) {\n    let connect_wifi_form = document.querySelector('#connect_wifi_form');\n    //connect_wifi_form.scrollIntoView(false);\n    setTimeout( () => { connect_wifi_form.scrollIntoView(false); }, 500);\n}\n\n\nfunction click_network(event) {\n    console.log(event.target);\n    let wifi_ssid = event.target.querySelector('#wifi_ssid');\n    let ssid_input = document.querySelector('#ssid');\n    let password_input = document.querySelector('#password');\n    ssid_input.value = wifi_ssid.textContent;\n    ssid_changed();\n    password.value = '';\n    password_input.focus();\n}\n\n\nfunction show_nomatch_panel() {\n    document.body.classList.add('shownomatchpanel');\n}\n\n\nfunction show_info_panel() {\n    document.body.classList.add('showinfopanel');\n    let local_hostname = document.querySelector('#local_hostname');\n    if (last_status && last_status.hostname) {\n\tlocal_hostname.textContent = last_status.hostname;\n    } else {\n\tlocal_hostname.textContent = '➖';\n    }\n    let local_ip_address = document.querySelector('#local_ip_address');\n    if (last_status && last_status.ip_address) {\n\tlocal_ip_address.textContent = last_status.ip_address;\n    } else {\n\tlocal_ip_address.textContent = '➖';\n    }\n    let rover_ip_address = document.querySelector('#rover_ip_address');\n    if (last_status && last_status.rover_ip_address) {\n\trover_ip_address.textContent = last_status.rover_ip_address;\n    } else {\n\trover_ip_address.textContent = '➖';\n    }\n}\n\n\nfunction dismiss_all_panels() {\n    document.body.classList.remove('showinfopanel');\n    document.body.classList.remove('shownomatchpanel');\n}\n\n\nasync function init() {\n    //if ('serviceWorker' in navigator) {\n    //\tconsole.log('CLIENT: service worker registration in progress.');\n    //\tnavigator.serviceWorker.register('/service-worker.js').then(function() {\n    //\t    console.log('CLIENT: service worker registration complete.');\n    //\t}, function() {\n    //\t    console.log('CLIENT: service worker registration failure.');\n    //\t});\n    //} else {\n    //\tconsole.log('CLIENT: service worker is not supported.');\n    //}\n\n    //reset_scroll('#wifi_section');\n    //reset_scroll('#sectionholder');\n\n    let wifi_form = document.querySelector('#connect_wifi_form');\n    wifi_form.addEventListener('submit', connect_wifi);\n\n    let ssid_input = document.querySelector('#ssid');\n    let password_input = document.querySelector('#password');\n    ssid_input.addEventListener('input', ssid_changed);\n    password_input.addEventListener('focus', password_focused);\n\n    let clickinfo = document.querySelector('#clickinfo');\n    clickinfo.addEventListener('click', show_info_panel);\n    let dismiss_buttons = document.querySelectorAll('#dismiss');\n    for (let dismiss_button of dismiss_buttons) {\n\tdismiss_button.addEventListener('click', dismiss_all_panels);\n    }\n\n    monitorServer();\n    monitorStatus();\n    monitorScan();\n    //monitorSignal();\n}\n\n\nwindow.client.init = init;\nwindow.client.cancel_connecting = cancel_connecting;\nwindow.client.disconnect_wifi = disconnect_wifi;\nwindow.client.click_network = click_network;\nwindow.client.toggle_password_visibility = toggle_password_visibility;\n"]}